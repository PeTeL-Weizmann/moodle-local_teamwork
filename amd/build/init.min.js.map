{"version":3,"file":"init.min.js","sources":["../src/init.js"],"sourcesContent":["/* eslint-disable no-console */\r\n/* eslint-disable complexity */\r\n/* eslint-disable max-len */\r\n/* eslint-disable no-empty-function */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable camelcase */\r\ndefine([\r\n    'jquery',\r\n    'core/str',\r\n    'core/ajax',\r\n    'core/modal_factory',\r\n    'core/modal_events',\r\n    'local_teamwork/popup',\r\n    'local_teamwork/render',\r\n    'local_teamwork/dragula',\r\n    'local_teamwork/skin',\r\n    'local_teamwork/loading',\r\n    'local_teamwork/voicecontrol',\r\n    'local_teamwork/keyboardnav',\r\n    'core/notification',\r\n], function($, Str, Ajax, ModalFactory, ModalEvents, popup, render, drag, skin, loadingIcon, Voicecontrol, Keyboardnav, Notification) {\r\n    'use strict';\r\n\r\n    const mainBlock = document.querySelector('body');\r\n\r\n    var voice = false;\r\n\r\n    const set_teamwork_enable = (courseid, activityid, moduletype, callback) => {\r\n        Ajax.call([{\r\n            methodname: 'local_teamwork_set_teamwork_enable',\r\n            args: {\r\n                activityid: Number(activityid),\r\n                moduletype: moduletype,\r\n            },\r\n            done: function(data) {\r\n                callback(data);\r\n            },\r\n            fail: function() {\r\n                popup.error();\r\n            }\r\n        }]);\r\n    };\r\n\r\n    const set_access_to_student = (courseid, activityid, moduletype, target) => {\r\n        const access = target.checked;\r\n\r\n        Ajax.call([{\r\n            methodname: 'local_teamwork_set_access_to_student',\r\n            args: {\r\n                activityid: Number(activityid),\r\n                moduletype: moduletype,\r\n            },\r\n            done: function(data) {\r\n\r\n            },\r\n            fail: function() {\r\n                popup.error();\r\n            }\r\n        }]);\r\n    };\r\n\r\n    const add_new_card = (courseid, activityid, moduletype, selectgroupid, teamname = null, callback) => {\r\n\r\n        loadingIcon.show();\r\n        Ajax.call([{\r\n            methodname: 'local_teamwork_add_new_card',\r\n            args: {\r\n                courseid: Number(courseid),\r\n                activityid: Number(activityid),\r\n                moduletype: moduletype,\r\n                selectgroupid: selectgroupid,\r\n                teamname: teamname,\r\n            },\r\n            done: function(data) {\r\n                loadingIcon.remove();\r\n                callback(data);\r\n            },\r\n            fail: function() {\r\n                loadingIcon.remove();\r\n                popup.error();\r\n            }\r\n        }]);\r\n    };\r\n\r\n    const delete_card = (teamid, courseid, activityid, moduletype, callback) => {\r\n\r\n        loadingIcon.show();\r\n        Ajax.call([{\r\n            methodname: 'local_teamwork_delete_card',\r\n            args: {\r\n                teamid: teamid\r\n            },\r\n            done: function(data) {\r\n                loadingIcon.remove();\r\n                callback(data);\r\n            },\r\n            fail: function() {\r\n                loadingIcon.remove();\r\n                popup.error();\r\n            }\r\n        }]);\r\n    };\r\n\r\n    const delete_user_submit = (userid, teamid, courseid, activityid, moduletype, callback) => {\r\n\r\n        loadingIcon.show();\r\n        Ajax.call([{\r\n            methodname: 'local_teamwork_delete_user_submit',\r\n            args: {\r\n                userid: userid,\r\n                teamid: teamid,\r\n                courseid: Number(courseid),\r\n                activityid: Number(activityid),\r\n                moduletype: moduletype\r\n            },\r\n            done: function(data) {\r\n                loadingIcon.remove();\r\n                callback(data);\r\n            },\r\n            fail: function() {\r\n                loadingIcon.remove();\r\n                popup.error();\r\n            }\r\n        }]);\r\n    };\r\n\r\n    const show_random_popup = () => {\r\n        Ajax.call([{\r\n            methodname: 'local_teamwork_show_random_popup',\r\n            args: {},\r\n            done: function(data) {\r\n                let result = JSON.parse(data.result);\r\n                popup.textHead = result.header;\r\n                popup.text = result.content;\r\n                popup.show();\r\n                Keyboardnav.getFocusableElements('.teamwork-modal');\r\n                Keyboardnav.setAccessabilityBehaviuor();\r\n                Keyboardnav.setFocusOnElement('#student_number');\r\n            },\r\n            fail: function() {\r\n                popup.error();\r\n            }\r\n        }]);\r\n    };\r\n\r\n    /* Toggle actions on allow enddate checkbox status change in student settings popup */\r\n    const student_settings_enddate_state = () => {\r\n        const teamuserallowenddatechkbox = document.querySelector(\"#teamuserallowenddate\");\r\n        const allinputs = Array.from(\r\n            document.querySelectorAll(\".teamuserenddate-inputs-wrapper input, .teamuserenddate-inputs-wrapper select\")\r\n        );\r\n        teamuserallowenddatechkbox.addEventListener(\"change\", e => {\r\n            if (e.target.checked) {\r\n                allinputs.forEach(item => {\r\n                    item.removeAttribute(\"disabled\");\r\n                });\r\n                e.target.value = \"1\";\r\n            } else {\r\n                allinputs.forEach(item => {\r\n                    item.setAttribute(\"disabled\", \"disabled\");\r\n                });\r\n                e.target.value = \"0\";\r\n            }\r\n            Keyboardnav.getFocusableElements('.teamwork-modal');\r\n            Keyboardnav.setAccessabilityBehaviuor();\r\n        });\r\n    };\r\n\r\n    /* Render_student_settings_popup */\r\n    const render_student_settings_popup = (activityid, moduletype) => {\r\n        Ajax.call([{\r\n            methodname: 'local_teamwork_render_student_settings_popup',\r\n            args: {\r\n                activityid: activityid,\r\n                moduletype: moduletype\r\n            },\r\n            done: function(data) {\r\n                let result = JSON.parse(data.result);\r\n                popup.textHead = result.header;\r\n                popup.text = result.content;\r\n                popup.show();\r\n\r\n                Keyboardnav.getFocusableElements('.teamwork-modal');\r\n                Keyboardnav.setAccessabilityBehaviuor();\r\n                Keyboardnav.setFocusOnElement('#teamnumbers');\r\n                setTimeout(student_settings_enddate_state, 1000);\r\n            },\r\n            fail: function() {\r\n                popup.error();\r\n            }\r\n        }]);\r\n    };\r\n\r\n    const student_settings_popup_data = (courseid, activityid, moduletype) => {\r\n        const popupForm = document.querySelector(\".teamwork-modal\");\r\n        const teamNumbers = popupForm.querySelector('#teamnumbers').value;\r\n        const teamUserNumbers = popupForm.querySelector('#teamusernumbers').value;\r\n        const teamUserendDate = popupForm.querySelector(\r\n            \"input[name=team-userend-date]\"\r\n        ).value;\r\n        const teamUserendMonth = popupForm.querySelector(\r\n            \"select[name=team-userend-month]\"\r\n        ).value;\r\n        const teamUserendYear = popupForm.querySelector(\r\n            \"input[name=team-userend-year]\"\r\n        ).value;\r\n        const teamUserendHour = popupForm.querySelector(\r\n            \"input[name=team-userend-hour]\"\r\n        ).value;\r\n        const teamUserendMinute = popupForm.querySelector(\r\n            \"input[name=team-userend-minute]\"\r\n        ).value;\r\n        const teamuserallowenddate = popupForm.querySelector(\r\n            \"input[name=teamuserallowenddate]\"\r\n        ).value;\r\n\r\n        loadingIcon.show();\r\n        Ajax.call([{\r\n            methodname: 'local_teamwork_student_settings_popup_data',\r\n            args: {\r\n                courseid: Number(courseid),\r\n                activityid: Number(activityid),\r\n                moduletype: moduletype,\r\n                teamnumbers: Number(teamNumbers),\r\n                teamusernumbers: Number(teamUserNumbers),\r\n                teamuserenddate: Number(teamUserendDate),\r\n                teamuserendmonth: Number(teamUserendMonth),\r\n                teamuserendyear: Number(teamUserendYear),\r\n                teamuserendhour: Number(teamUserendHour),\r\n                teamuserendminute: Number(teamUserendMinute),\r\n                teamuserallowenddate: Number(teamuserallowenddate),\r\n            },\r\n            done: function(data) {\r\n                loadingIcon.remove();\r\n            },\r\n            fail: function() {\r\n                popup.error();\r\n            }\r\n        }]);\r\n    };\r\n\r\n    const set_random_teams = (target, courseid, activityid, moduletype, selectgroupid, callback) => {\r\n        while (!target.classList.contains('teamwork-modal')) {\r\n            target = target.parentNode;\r\n        }\r\n        const numberofstudent = target.querySelector('#student_number').value;\r\n\r\n        loadingIcon.show();\r\n        Ajax.call([{\r\n            methodname: 'local_teamwork_set_random_teams',\r\n            args: {\r\n                courseid: Number(courseid),\r\n                activityid: Number(activityid),\r\n                moduletype: moduletype,\r\n                selectgroupid: selectgroupid,\r\n                numberofstudent: Number(numberofstudent),\r\n            },\r\n            done: function(data) {\r\n                loadingIcon.remove();\r\n                callback(data);\r\n            },\r\n            fail: function() {\r\n                loadingIcon.remove();\r\n                popup.error();\r\n            }\r\n        }]);\r\n    };\r\n\r\n    const set_new_team_name = (target, courseid, activityid, moduletype, selectgroupid, callback) => {\r\n        const cardid = target.dataset.team_id;\r\n        const cardname = target.value;\r\n\r\n        Ajax.call([{\r\n            methodname: 'local_teamwork_set_new_team_name',\r\n            args: {\r\n                cardid: Number(cardid),\r\n                cardname: cardname,\r\n            },\r\n            done: function(data) {\r\n                callback();\r\n            },\r\n            fail: function() {\r\n                popup.error();\r\n            }\r\n        }]);\r\n    };\r\n\r\n    // Search student by name on student list.\r\n    const searchStudentByName = target => {\r\n        const studentList = Array.from(\r\n            document.querySelectorAll(\"#studentList div[data-student_id]\")\r\n        );\r\n        const hiddenClass = 'visuallyhidden';\r\n        const searchItem = target.value;\r\n    if (!searchItem) {\r\n        studentList.forEach(item => {\r\n            item.classList.remove(hiddenClass);\r\n        });\r\n        return;\r\n    }\r\n\r\n        studentList.forEach(item => {\r\n            if (item.innerHTML.toLowerCase().search(searchItem.toLowerCase()) >= 0) {\r\n                item.classList.remove(hiddenClass);\r\n            } else {\r\n                item.classList.add(hiddenClass);\r\n            }\r\n        });\r\n    };\r\n\r\n    const searchInit = () => {\r\n        // Init search for student list.\r\n        const searchInput = mainBlock.querySelector(\r\n            'input[data-handler = \"search_student\"]'\r\n        );\r\n        searchInput.addEventListener(\"input\", function(e) {\r\n            searchStudentByName(searchInput);\r\n        });\r\n    };\r\n\r\n    const searchReset = target => {\r\n        const studentList = Array.from(\r\n            document.querySelectorAll(\"#studentList div[data-student_id]\")\r\n        );\r\n        const hiddenClass = 'visuallyhidden';\r\n        const searchInput = mainBlock.querySelector(\r\n            'input[data-handler = \"search_student\"]'\r\n        );\r\n\r\n        searchInput.value = '';\r\n        studentList.forEach(item => {\r\n            item.classList.remove(hiddenClass);\r\n        });\r\n    };\r\n\r\n    return {\r\n\r\n        // For voicerecognition.\r\n        add_new_card: function(courseid, activityid, moduletype, selectgroupid, teamname, callback) {\r\n            add_new_card(courseid, activityid, moduletype, selectgroupid, teamname, callback);\r\n        },\r\n        delete_card: function(teamid, courseid, activityid, moduletype, callback) {\r\n            delete_card(teamid, courseid, activityid, moduletype, callback);\r\n        },\r\n\r\n        init: function(courseid, activityid, moduletype, selectgroupid) {\r\n\r\n            let self = this;\r\n            let voice = 0;\r\n\r\n            Ajax.call([{\r\n                methodname: 'local_teamwork_render_block_html_page',\r\n                args: {\r\n                    courseid: Number(courseid),\r\n                    activityid: Number(activityid),\r\n                    moduletype: moduletype,\r\n                    selectgroupid: selectgroupid\r\n                },\r\n                done: function(data) {\r\n\r\n                    let paths = JSON.parse(data.paths);\r\n                    let tokens = JSON.parse(data.tokens);\r\n                    let schemes = JSON.parse(data.schemes);\r\n\r\n                    voice = data.voicecontrolenabled;\r\n                    if (voice !== 0) {\r\n                        Voicecontrol.init(data.currentlangcode, paths, tokens, schemes);\r\n                        Voicecontrol.reload(courseid, activityid, moduletype, selectgroupid, paths, data.currentlangcode);\r\n                    }\r\n\r\n                    if (moduletype === 'assign') {\r\n                        let assign = $(\"body#page-mod-assign-view #intro\");\r\n                        assign.append(data.html);\r\n                        self.renderHtmlToPage(courseid, activityid, moduletype, selectgroupid);\r\n                    }\r\n\r\n                    if (moduletype === 'quiz') {\r\n                        let quiz = $(\".quizinfo\");\r\n                        quiz.append(data.html);\r\n                        self.renderHtmlToPage(courseid, activityid, moduletype, selectgroupid);\r\n                    }\r\n                },\r\n                fail: Notification.exception\r\n            }]);\r\n\r\n        },\r\n\r\n        renderHtmlToPage: function(courseid, activityid, moduletype, selectgroupid) {\r\n            render.data = {\r\n                sesskey: M.cfg.sesskey,\r\n                courseid: courseid,\r\n                activityid: activityid,\r\n                moduletype: moduletype,\r\n                selectgroupid: selectgroupid\r\n            };\r\n\r\n            // Run and open local window.\r\n            $(\"#open_local\").on(\"click\", function() {\r\n                render.mainBlock(searchInit, voice);\r\n            });\r\n\r\n            document.addEventListener('click', function(event) {\r\n                let target = event.target;\r\n                event.stopPropagation();\r\n                while (target !== mainBlock) {\r\n\r\n                    if (target === null) {\r\n                        break;\r\n                    }\r\n\r\n                    // Activate/diactivate teamwork.\r\n                    if (target.dataset.handler === 'teamwork_toggle') {\r\n                        target.classList.toggle('active');\r\n                        let state = target.dataset.state === 'active' ? 'disabled' : 'active';\r\n                        target.dataset.state = state;\r\n                        target.setAttribute('aria-pressed', state);\r\n                        $(\".skin_shadow\").toggleClass(\"skin_show\").toggleClass(\"skin_hide\");\r\n\r\n                        skin.checkPopupSkinState(state);\r\n                        if(state === 'disabled') {\r\n                            Keyboardnav.getFocusableElements('.teamworkdialog', '[data-handler=\"teamwork_toggle\"], .skin_close');\r\n                        } else {\r\n                            Keyboardnav.getFocusableElements('.teamworkdialog');\r\n                        }\r\n                        Keyboardnav.setFocusOnElement('[data-handler=\"teamwork_toggle\"]');\r\n                        Keyboardnav.setAccessabilityBehaviuor();\r\n                        set_teamwork_enable(courseid, activityid, moduletype, function() {});\r\n                        return;\r\n                    }\r\n\r\n                    // Close popups.\r\n                    if (target.classList.contains('close_popup') || target.classList.contains('teamwork-modal_close')) {\r\n                        if (target.classList.contains('stop-close')) {\r\n                            return;\r\n                        }\r\n                        popup.remove();\r\n                        if (target.classList.contains('teamwork-modal_close')) {\r\n                            Keyboardnav.getFocusableElements('.teamworkdialog');\r\n                            Keyboardnav.setAccessabilityBehaviuor();\r\n                            Keyboardnav.setFocusOnPrevfocusedElement();\r\n                            return;\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n\r\n                    // Close skin popup.\r\n                    if (target.classList.contains('skin_close') || target.classList.contains('close_btn')) {\r\n                        if (voice !== 0) {\r\n                            Voicecontrol.stop();\r\n                        }\r\n                        skin.remove();\r\n                        return;\r\n                    }\r\n\r\n                    // Show student_setting popup.\r\n                    if (target.dataset.handler === 'access_to_student') {\r\n                        if (target.classList.contains('active')) {\r\n                            target.classList.remove('active');\r\n                            set_access_to_student(courseid, activityid, moduletype, target);\r\n                        } else {\r\n                            target.classList.add('active');\r\n                            render_student_settings_popup(activityid, moduletype);\r\n                            Keyboardnav.setPrevfocusedElement(`[data-handler=\"${target.dataset.handler}\"]`);\r\n                            set_access_to_student(courseid, activityid, moduletype, target);\r\n                        }\r\n                    }\r\n\r\n                    // Delete user submit.\r\n                    if (target.dataset.handler === 'delete_user_submit') {\r\n                        let userid = target.dataset.userid;\r\n                        let teamid = target.dataset.teamid;\r\n                        Keyboardnav.setPrevfocusedElement(`[data-userid=\"${userid}\"]`);\r\n\r\n                        Str.get_strings([\r\n                            {key: 'titlepopupremoveuser', component: 'local_teamwork'},\r\n                            {key: 'contentpopupremoveuser', component: 'local_teamwork'},\r\n                            {key: 'buttonpopupremoveuser', component: 'local_teamwork'},\r\n                        ]).done(function(strings) {\r\n                            var modalPromise = ModalFactory.create({\r\n                                type: ModalFactory.types.SAVE_CANCEL,\r\n                                title: strings[0],\r\n                                body: strings[1]\r\n                            });\r\n\r\n                            $.when(modalPromise).then(function(fmodal) {\r\n\r\n                                fmodal.setSaveButtonText(strings[2]);\r\n\r\n                                // Handle save event.\r\n                                fmodal.getRoot().on(ModalEvents.save, function(e) {\r\n                                    e.preventDefault();\r\n\r\n                                    delete_user_submit(userid, teamid, courseid, activityid, moduletype, function() {\r\n                                        render.setDefaultData();\r\n                                        render.studentList();\r\n                                        render.teamsCard();\r\n                                        $('.skin.shadow').removeAttr(\"style\");\r\n                                        fmodal.destroy();\r\n                                    });\r\n                                });\r\n                                fmodal.getRoot().on(ModalEvents.cancel, function(e) {\r\n                                    render.setDefaultData();\r\n                                    render.studentList();\r\n                                    render.teamsCard();\r\n                                    $('.skin.shadow').removeAttr(\"style\");\r\n                                    fmodal.destroy();\r\n                                    Keyboardnav.setFocusOnPrevfocusedElement();\r\n                                });\r\n\r\n                                var root = fmodal.getRoot();\r\n                                root.on(ModalEvents.shown, function() {\r\n                                    $('.skin.shadow').css(\"z-index\", \"1000\");\r\n                                });\r\n\r\n                                root.on(ModalEvents.hidden, function() {\r\n                                    render.setDefaultData();\r\n                                    render.studentList();\r\n                                    render.teamsCard();\r\n                                    $('.skin.shadow').removeAttr(\"style\");\r\n                                    fmodal.destroy();\r\n                                    Keyboardnav.setFocusOnPrevfocusedElement();\r\n                                });\r\n\r\n                                return fmodal;\r\n                            }).done(function(modal) {\r\n                                modal.show();\r\n                            }).fail(Notification.exception);\r\n                        });\r\n\r\n                        return;\r\n                    }\r\n\r\n                    // Get data from popup form.\r\n                    if (target.dataset.handler === 'get_popup_data') {\r\n                        event.preventDefault();\r\n                        student_settings_popup_data(courseid, activityid, moduletype);\r\n                        popup.remove();\r\n                        Keyboardnav.getFocusableElements('.teamworkdialog');\r\n                        Keyboardnav.setAccessabilityBehaviuor();\r\n                        Keyboardnav.setFocusOnPrevfocusedElement();\r\n                        return;\r\n                    }\r\n\r\n                    // Open select group menu.\r\n                    if (target.dataset.handler === 'open_group_selection') {\r\n                        $(target)\r\n                            .next()\r\n                            .slideToggle();\r\n                        return;\r\n                    }\r\n\r\n                    // Handle select group.\r\n                    if (target.dataset.handler === 'select_groups') {\r\n                        let text = document.querySelector('html[lang=\"en\"]')\r\n                            ? \"choose grous\"\r\n                            : \"בחר קבוצה\";\r\n                        if (target.classList.contains('selected')) {\r\n                            return;\r\n                        }\r\n                        target.classList.toggle('selected');\r\n                        $('div[data-handler=\"open_group_selection\"]').html(\r\n                            target.classList.contains('selected') ? target.innerHTML : text\r\n                        );\r\n\r\n                        $(target).siblings().removeClass(\"selected\");\r\n\r\n                        let result = [];\r\n                        let val = Array.from(target.parentNode.children);\r\n                        val.forEach(item => {\r\n                            if (item.classList.contains('selected')) {\r\n                                result.push(item.dataset.value);\r\n                            }\r\n                        });\r\n                        $(target)\r\n                            .parent()\r\n                            .slideToggle();\r\n                        selectgroupid = JSON.stringify(result);\r\n                        render.data.selectgroupid = JSON.stringify(result);\r\n                        render.studentList();\r\n                        render.teamsCard();\r\n                        return;\r\n                    }\r\n\r\n                    // Add new team card.\r\n                    if (target.dataset.handler === 'add_new_teamcard') {\r\n                        add_new_card(\r\n                            courseid,\r\n                            activityid,\r\n                            moduletype,\r\n                            selectgroupid,\r\n                            null,\r\n                            function() {\r\n                                render.setDefaultData();\r\n                                render.studentList();\r\n                                render.teamsCard();\r\n                            }\r\n                        );\r\n\r\n                        return;\r\n                    }\r\n\r\n                    // Delete team card.\r\n                    if (target.dataset.handler === 'delete_teamcard') {\r\n                        let teamid = target.dataset.remove_team_id;\r\n                        delete_card(teamid, courseid, activityid, moduletype, function() {\r\n                            render.setDefaultData();\r\n                            render.teamsCard();\r\n                            render.studentList();\r\n                        });\r\n                        Keyboardnav.setPrevfocusedElement(`[data-handler=\"${target.dataset.handler}\"]`);\r\n\r\n                        return;\r\n                    }\r\n\r\n                    // Show popup to determine the random number of students on the each team.\r\n                    if (target.dataset.handler === 'random_popup') {\r\n                        show_random_popup();\r\n                        Keyboardnav.setPrevfocusedElement(`[data-handler=\"${target.dataset.handler}\"]`);\r\n                        return;\r\n                    }\r\n\r\n                    // Set random teams.\r\n                    if (target.dataset.handler === 'random') {\r\n                        set_random_teams(\r\n                            target,\r\n                            courseid,\r\n                            activityid,\r\n                            moduletype,\r\n                            render.data.selectgroupid,\r\n                            function() {\r\n                                render.teamsCard();\r\n                                render.studentList();\r\n                                popup.remove();\r\n//FIXME:\r\n                         /*        skin.getFocusableElements($('.teamworkdialog'));\r\n                                skin.setAccessabilityBehaviuor(); */\r\n                                // skin.setFocusOnElement(skin.PREVFOCUSED.element);\r\n                            }\r\n                        );\r\n                        return;\r\n                    }\r\n\r\n                    // Search reset.\r\n                    if (target.dataset.handler === 'search_reset') {\r\n                        searchReset(target);\r\n                        return;\r\n                    }\r\n\r\n                    target = target.parentNode;\r\n                }\r\n            });\r\n\r\n            // Close popup by keypres on close X btn\r\n            $(document).on(\"keydown\", \".skin_close\", function(e) {\r\n                let keycode = (e.keyCode ? e.keyCode : e.which);\r\n                if (keycode === 13) {\r\n                    if (voice !== 0) {\r\n                        Voicecontrol.stop();\r\n                    }\r\n                    skin.remove();\r\n                }\r\n            });\r\n\r\n\r\n            // Init drug and drop events.\r\n            drag.startDrag();\r\n\r\n            // Change team name.\r\n            document.addEventListener(\"change\", function(event) {\r\n                if (event.target.dataset.handler === 'input_team_name') {\r\n                    set_new_team_name(\r\n                        event.target,\r\n                        courseid,\r\n                        activityid,\r\n                        moduletype,\r\n                        render.data.selectgroupid,\r\n                        function() {\r\n                            render.teamsCard();\r\n                        }\r\n                    );\r\n                    Keyboardnav.setPrevfocusedElement(`[data-handler=\"${event.target.dataset.handler}\"]`);\r\n                }\r\n            });\r\n\r\n            // Change team name with keypress.\r\n            document.addEventListener(\"keypress\", function(event) {\r\n                if (event.target.dataset.handler === 'input_team_name' && event.keyCode === 13) {\r\n                    set_new_team_name(\r\n                        event.target,\r\n                        courseid,\r\n                        activityid,\r\n                        moduletype,\r\n                        render.data.selectgroupid,\r\n                        function() {\r\n                            render.teamsCard();\r\n                        }\r\n                    );\r\n                }\r\n            });\r\n\r\n            // Close all popups by esc.\r\n            document.addEventListener(\"keydown\", function(event) {\r\n                if (event.keyCode === 27) {\r\n                    skin.remove();\r\n                    popup.remove();\r\n                }\r\n            });\r\n\r\n        }\r\n    };\r\n});\r\n"],"names":["define","$","Str","Ajax","ModalFactory","ModalEvents","popup","render","drag","skin","loadingIcon","Voicecontrol","Keyboardnav","Notification","mainBlock","document","querySelector","set_teamwork_enable","courseid","activityid","moduletype","callback","call","methodname","args","Number","done","data","fail","error","set_access_to_student","target","checked","add_new_card","selectgroupid","teamname","show","remove","delete_card","teamid","delete_user_submit","userid","student_settings_enddate_state","teamuserallowenddatechkbox","allinputs","Array","from","querySelectorAll","addEventListener","e","forEach","item","removeAttribute","value","setAttribute","getFocusableElements","setAccessabilityBehaviuor","render_student_settings_popup","result","JSON","parse","textHead","header","text","content","setFocusOnElement","setTimeout","student_settings_popup_data","popupForm","teamNumbers","teamUserNumbers","teamUserendDate","teamUserendMonth","teamUserendYear","teamUserendHour","teamUserendMinute","teamuserallowenddate","teamnumbers","teamusernumbers","teamuserenddate","teamuserendmonth","teamuserendyear","teamuserendhour","teamuserendminute","set_random_teams","classList","contains","parentNode","numberofstudent","set_new_team_name","cardid","dataset","team_id","cardname","searchInit","searchInput","studentList","searchItem","innerHTML","toLowerCase","search","add","searchStudentByName","searchReset","init","self","this","voice","paths","tokens","schemes","voicecontrolenabled","currentlangcode","reload","append","html","renderHtmlToPage","exception","sesskey","M","cfg","on","event","stopPropagation","handler","toggle","state","toggleClass","checkPopupSkinState","setFocusOnPrevfocusedElement","stop","setPrevfocusedElement","get_strings","key","component","strings","modalPromise","create","type","types","SAVE_CANCEL","title","body","when","then","fmodal","setSaveButtonText","getRoot","save","preventDefault","setDefaultData","teamsCard","removeAttr","destroy","cancel","root","shown","css","hidden","modal","next","slideToggle","siblings","removeClass","children","push","parent","stringify","remove_team_id","keyCode","which","startDrag"],"mappings":"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"}