{"version":3,"file":"voicecontrol.min.js","sources":["../src/voicecontrol.js"],"sourcesContent":["define([\r\n    'jquery',\r\n    'core/ajax',\r\n], function (\r\n    $,\r\n    Ajax,\r\n) {\r\n    'use strict';\r\n\r\n    var timeout = 4;\r\n    var timer = false;\r\n    var timers = [];\r\n    var clear_all_timers = () => {\r\n        timers.forEach((i, t) => {\r\n            clearInterval(i);\r\n        });\r\n        timers = [];\r\n        timer = false;\r\n    }\r\n    const start_timer = (duration, callback) => {\r\n        if (timer) {\r\n            clear_all_timers()\r\n        }\r\n        var countDownDate = new Date().getTime() + (duration * 1000);\r\n        var x = setInterval(function () {\r\n            var now = new Date().getTime();\r\n            var distance = countDownDate - now;\r\n            var days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n            var seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n            if (distance < 0) {\r\n                clear_all_timers();\r\n                clearInterval(x);\r\n                callback();\r\n            }\r\n        }, 1000);\r\n        if (!timers.includes(x)) {\r\n            timers.push(x);\r\n            timer = true;\r\n        }\r\n    }\r\n    var current_langcode = '';\r\n    var current_short_langcode = '';\r\n    var set_lang = (lang = 'en-US') => {\r\n        current_langcode = lang;\r\n        current_short_langcode = lang.split('-')[0];\r\n    }\r\n\r\n    // TODO: Get tokens.\r\n    var tokens = [];\r\n    var schemes = [];\r\n    var commands = [];\r\n    var default_commands = [\r\n        {\r\n            public: true,\r\n            scheme: {\r\n                // en: 'sing a song',\r\n                // iw: 'תשיר',\r\n                // ru: 'спой песенку',\r\n            },\r\n            command_id: 'sing_a_song',\r\n            command_exec: () => {\r\n                sound('sample');\r\n            },\r\n            params: {},\r\n        },\r\n        // {\r\n        //     public: false,\r\n        //     scheme: {\r\n        //         // en: '11 | eleven',\r\n        //         // iw: '11',\r\n        //         // ru: '11 | одинадцать',\r\n        //     },\r\n        //     command_id: '11',\r\n        //     command_exec: () => {\r\n        //         sound('please_repeat');\r\n        //     },\r\n        //     params: {},\r\n        // },\r\n        {\r\n            public: true,\r\n            command_id: 'add_new_teamcard',\r\n            scheme: {\r\n                // en: 'add a team | add new team',\r\n                // iw: 'תוסיף צוות | תוסיף צוות חדש',\r\n                // ru: 'добавь новую команду',\r\n            },\r\n            params: {\r\n            },\r\n            command_exec: function (params) {\r\n                require([\r\n                    'local_teamwork/render',\r\n                    'local_teamwork/init',\r\n                ], function (\r\n                    render,\r\n                    l_tw_init,\r\n                ) {\r\n                    let courseid = params.courseid;\r\n                    let activityid = params.activityid;\r\n                    let moduletype = params.moduletype;\r\n                    let selectgroupid = params.selectgroupid;\r\n                    l_tw_init.add_new_card(\r\n                        courseid,\r\n                        activityid,\r\n                        moduletype,\r\n                        selectgroupid,\r\n                        null,\r\n                        function () {\r\n                            render.setDefaultData();\r\n                            render.studentList();\r\n                            render.teamsCard();\r\n                        }\r\n                    );\r\n                });\r\n            }\r\n        },\r\n        {\r\n            public: true,\r\n            command_id: 'add_new_named_teamcard',\r\n            scheme: {\r\n                // en: 'please create a team {_teamname} | create a team {_teamname}',\r\n                // iw: 'נא ליצור צוות {_teamname} | אנא ליצור צוות {_teamname}',\r\n                // ru: 'добав команду {_teamname}',\r\n            },\r\n            params: {\r\n            },\r\n            command_exec: function (params) {\r\n                require([\r\n                    'local_teamwork/render',\r\n                    'local_teamwork/init',\r\n                ], function (\r\n                    render,\r\n                    l_tw_init,\r\n                ) {\r\n                    let courseid = params.courseid;\r\n                    let activityid = params.activityid;\r\n                    let moduletype = params.moduletype;\r\n                    let selectgroupid = params.selectgroupid;\r\n                    let teamname = params._teamname;\r\n                    l_tw_init.add_new_card(\r\n                        courseid,\r\n                        activityid,\r\n                        moduletype,\r\n                        selectgroupid,\r\n                        teamname,\r\n                        function () {\r\n                            render.setDefaultData();\r\n                            render.studentList();\r\n                            render.teamsCard();\r\n                        }\r\n                    );\r\n                });\r\n            }\r\n        },\r\n        {\r\n            public: true,\r\n            command_id: 'create_numbers_teamcard', // create {number} teams\r\n            scheme: {\r\n                // en: 'create {_number} teams',\r\n                // iw: 'יצירת {_number} צוותים',\r\n                // ru: 'добавь {_number} команд',\r\n            },\r\n            params: {\r\n            },\r\n            command_exec: function (params) {\r\n                require([\r\n                    'local_teamwork/render',\r\n                    'local_teamwork/init',\r\n                ], function (\r\n                    render,\r\n                    l_tw_init,\r\n                ) {\r\n                    var number = text2num(params._number);\r\n                    let courseid = params.courseid;\r\n                    let activityid = params.activityid;\r\n                    let moduletype = params.moduletype;\r\n                    let selectgroupid = params.selectgroupid;\r\n                    for (let index = 0; index < number; index++) {\r\n                        l_tw_init.add_new_card(\r\n                            courseid,\r\n                            activityid,\r\n                            moduletype,\r\n                            selectgroupid,\r\n                            null,\r\n                            function () {\r\n                                render.setDefaultData();\r\n                                render.studentList();\r\n                                render.teamsCard();\r\n                            }\r\n                        );\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        {\r\n            public: true,\r\n            command_id: 'drag_student_card',\r\n            scheme: {\r\n                // en: 'move {userfullname} to {teamname} card | add {userfullname} to {teamname} card',\r\n                // iw: 'תעביר {userfullname} ל{teamname} | תעביר {userfullname} לצוות {teamname} | נא להעביר {userfullname} לצוות {teamname} | נא להעביר {userfullname} ל {teamname} | נא להעביר {userfullname} ל{teamname}',\r\n                // ru: 'перемести {userfullname} в карточку {teamname}',\r\n            },\r\n            params: {\r\n            },\r\n            command_exec: function (params) {\r\n                require([\r\n                    'local_teamwork/render',\r\n                    'core/ajax',\r\n                    'local_teamwork/loading',\r\n                ], function (\r\n                    render,\r\n                    Ajax,\r\n                    loadingIcon,\r\n                ) {\r\n                    var draguserid = params.userfullname; // Yea it's ID, not name.\r\n                    var stud_card = $(\"div.teamwork_student[data-student_id=\" + draguserid + \"]\");\r\n                    var groupid = params.teamname; // Yea it's ID, not name.\r\n                    var group_card = $(\"div.teamwork_team[data-team_id=\" + groupid + \"]\").find('.teamwork_team-inner.draggable');\r\n                    group_card.append(stud_card);\r\n                    const allTeamsBlocks = Array.from(document.querySelectorAll('div[data-team_id]'));\r\n                    const allTeams = [];\r\n                    allTeamsBlocks.forEach((item) => {\r\n                        let team = {};\r\n                        team.teamid = item.dataset.team_id;\r\n                        team.studentid = [];\r\n                        let allStudents = Array.from(item.querySelectorAll('.teamwork_student'));\r\n                        allStudents.forEach((student) => {\r\n                            team.studentid.push(student.dataset.student_id);\r\n                        });\r\n                        allTeams.push(team);\r\n                    });\r\n                    let courseid = params.courseid;\r\n                    let activityid = params.activityid;\r\n                    let moduletype = params.moduletype;\r\n                    let selectgroupid = params.selectgroupid;\r\n                    let newteamspost = JSON.stringify(allTeams);\r\n                    draguserid = Number(draguserid);\r\n                    loadingIcon.show();\r\n                    Ajax.call([{\r\n                        methodname: 'local_teamwork_drag_student_card',\r\n                        args: {\r\n                            courseid: courseid,\r\n                            activityid: activityid,\r\n                            moduletype: moduletype,\r\n                            selectgroupid: selectgroupid,\r\n                            newteamspost: newteamspost,\r\n                            draguserid: draguserid,\r\n                            removeteam: false,\r\n                        },\r\n                        done: function (data) {\r\n                            loadingIcon.remove();\r\n                            render.setDefaultData();\r\n                            render.studentList();\r\n                            render.teamsCard();\r\n                        },\r\n                        fail: function () {\r\n                            loadingIcon.remove();\r\n                            popup.error();\r\n                        }\r\n                    }]);\r\n                });\r\n            }\r\n        },\r\n        {\r\n            public: true,\r\n            command_id: 'delete_teamcard',\r\n            scheme: {\r\n                // en: 'delete {teamname}',\r\n                // iw: 'מחק צוות {teamname} |  תמחק צוות {teamname}',\r\n                // ru: 'удали команду {teamname}',\r\n            },\r\n            params: {\r\n            },\r\n            command_exec: function (params) {\r\n                require([\r\n                    'local_teamwork/render',\r\n                    'core/ajax',\r\n                    'local_teamwork/loading',\r\n                    'local_teamwork/init',\r\n                ], function (\r\n                    render,\r\n                    Ajax,\r\n                    loadingIcon,\r\n                    l_tw_init,\r\n                ) {\r\n                    var teamid = params.teamname; // Yea it's ID, not name.\r\n                    let courseid = params.courseid;\r\n                    let activityid = params.activityid;\r\n                    let moduletype = params.moduletype;\r\n                    l_tw_init.delete_card(teamid, courseid, activityid, moduletype, function () {\r\n                        render.setDefaultData();\r\n                        render.teamsCard();\r\n                        render.studentList();\r\n                    });\r\n                });\r\n            }\r\n        },\r\n        {\r\n            public: true,\r\n            command_id: 'read_users',\r\n            scheme: {\r\n                // en: 'read user lists | read users',\r\n                // iw: 'רשימת צוותים | תקראי רשימת צוותים',\r\n                // ru: 'прочитай пользователей',\r\n            },\r\n            params: {\r\n            },\r\n            command_exec: function (params) {\r\n                require([\r\n                    'local_teamwork/render',\r\n                    'core/ajax',\r\n                    'local_teamwork/loading',\r\n                ], function (\r\n                    render,\r\n                    Ajax,\r\n                    loadingIcon,\r\n                ) {\r\n                    var user_list = '';\r\n                    params.students.forEach(element => {\r\n                        user_list += element.value + ', ';\r\n                    });\r\n                    say(user_list);\r\n                });\r\n            }\r\n        },\r\n        {\r\n            public: true,\r\n            command_id: 'read_teams',\r\n            scheme: {\r\n                // en: 'read teams',\r\n                // iw: 'תקראי רשימת צוותים ', // TODO:\r\n                // ru: 'прочитай команды',\r\n            },\r\n            params: {\r\n            },\r\n            command_exec: function (params) {\r\n                require([\r\n                    'local_teamwork/render',\r\n                    'core/ajax',\r\n                    'local_teamwork/loading',\r\n                ], function (\r\n                    render,\r\n                    Ajax,\r\n                    loadingIcon,\r\n                ) {\r\n                    var group_list = '';\r\n                    params.groups.forEach(element => {\r\n                        group_list += element.value + ', ';\r\n                    });\r\n                    say(group_list);\r\n                });\r\n            }\r\n        },\r\n    ];\r\n\r\n    // TODO: commands w/ confirmation?\r\n    let get_commands = () => {\r\n\r\n        default_commands.forEach((element, index) => {\r\n\r\n            var scheme_id = element.command_id;\r\n            default_commands[index].scheme = schemes[scheme_id];\r\n        });\r\n\r\n        commands = default_commands;\r\n    }\r\n\r\n    // get_commands();\r\n    var state = 'disabled'; // enabled, token, command...\r\n    //////////////////////////////////////////////////////////////////////////////////////\r\n    let similarity = (s1, s2) => {\r\n        var longer = s1;\r\n        var shorter = s2;\r\n        if (s1.length < s2.length) {\r\n            longer = s2;\r\n            shorter = s1;\r\n        }\r\n        var longerLength = longer.length;\r\n        if (longerLength === 0) {\r\n            return 1.0;\r\n        }\r\n        return (longerLength - editDistance(longer, shorter)) / parseFloat(longerLength);\r\n    }\r\n    let editDistance = (s1, s2) => {\r\n        s1 = s1.toLowerCase();\r\n        s2 = s2.toLowerCase();\r\n        var costs = new Array();\r\n        for (var i = 0; i <= s1.length; i++) {\r\n            var lastValue = i;\r\n            for (var j = 0; j <= s2.length; j++) {\r\n                if (i === 0)\r\n                    costs[j] = j;\r\n                else {\r\n                    if (j > 0) {\r\n                        var newValue = costs[j - 1];\r\n                        if (s1.charAt(i - 1) !== s2.charAt(j - 1))\r\n                            newValue = Math.min(Math.min(newValue, lastValue),\r\n                                costs[j]) + 1;\r\n                        costs[j - 1] = lastValue;\r\n                        lastValue = newValue;\r\n                    }\r\n                }\r\n            }\r\n            if (i > 0)\r\n                costs[s2.length] = lastValue;\r\n        }\r\n        return costs[s2.length];\r\n    }\r\n\r\n    const stringSimilarity = (a, b) =>\r\n        _stringSimilarity(prep(a), prep(b))\r\n\r\n    const _stringSimilarity = (a, b) => {\r\n        const bg1 = bigrams(a)\r\n        const bg2 = bigrams(b)\r\n        const c1 = count(bg1)\r\n        const c2 = count(bg2)\r\n        const combined = uniq([...bg1, ...bg2])\r\n            .reduce((t, k) => t + (Math.min(c1[k] || 0, c2[k] || 0)), 0)\r\n        return 2 * combined / (bg1.length + bg2.length)\r\n    }\r\n\r\n    const prep = (str) => {  // TODO: unicode support?\r\n\r\n        return current_short_langcode !== 'iw' ? str.toLowerCase().replace(/[^\\w\\s]/g, ' ').replace(/\\s+/g, ' ') : str.toLowerCase().replace('^[a-z\\u0590-\\u05fe]+$', ' ');\r\n    }\r\n\r\n    // str.toLowerCase().replace(/[^\\w\\s]/g, ' ').replace(/\\s+/g, ' ')\r\n    // str.toLowerCase().replace('^[a-z\\u0590-\\u05fe]+$', ' ')\r\n\r\n    const bigrams = (str) =>\r\n        [...str].slice(0, -1).map((c, i) => c + str[i + 1])\r\n\r\n    const count = (xs) =>\r\n        xs.reduce((a, x) => ((a[x] = (a[x] || 0) + 1), a), {})\r\n\r\n    const uniq = (xs) =>\r\n        [... new Set(xs)]\r\n    //////////////////////////////////////////////////////////////////////\r\n\r\n    let find_match = (input, stack, threshold = 0.35) => {\r\n        var result = null;\r\n        var list = [];\r\n        input = input.toLowerCase();\r\n        stack.forEach((element, index) => {\r\n            var el_vars = typeof (element) != 'string' ? element : [element];            // var el_vars = element;\r\n            var el_weight = 0;\r\n            var sim = 0;\r\n            var scheme_option = 0;\r\n            el_vars.forEach((el, i) => {\r\n                // sim = similarity(input, el.toLowerCase().trim());\r\n                sim = stringSimilarity(input, el.toLowerCase().trim()); // Another variant. HE fails!\r\n                if (sim > el_weight) {\r\n                    el_weight = sim;\r\n                    scheme_option = i;\r\n                }\r\n            });\r\n            list.push([index, el_weight, scheme_option]);\r\n        });\r\n\r\n        list.sort((a, b) => b[1] - a[1]);\r\n\r\n        result = list[0];\r\n        if (result[1] < threshold) {\r\n            return null;\r\n        }\r\n\r\n        return result;\r\n    }\r\n    const extract = (template, str) => {\r\n\r\n        const templateParts = template.split(/{|}/);\r\n        const extracted = {};\r\n        for (let index = 1; index < templateParts.length; index += 2) {\r\n            const\r\n                possibleKey = templateParts[index],\r\n                keyPrefix = templateParts[index - 1],\r\n                nextPrefix = templateParts[index + 1];\r\n            const substringStartIndex = str.indexOf(keyPrefix) + keyPrefix.length;\r\n            const substringEndIndex = nextPrefix ? str.indexOf(nextPrefix) : str.length;\r\n            extracted[possibleKey] = str.substring(substringStartIndex, substringEndIndex);\r\n        }\r\n        return extracted;\r\n    }\r\n\r\n    var match_token = (input) => {\r\n        // let match = find_match(input, tokens);\r\n        var match = false;\r\n\r\n        // tokens.forEach(token => {\r\n        //     if (input.includes(token)) {\r\n        //         match = true;\r\n        //     }\r\n        // });\r\n\r\n\r\n        tokens.some(function (el) {\r\n            if (input.includes(el)) {\r\n                match = true;\r\n                return;\r\n            }\r\n        });\r\n\r\n        if (match) {\r\n\r\n            // debugger;\r\n            speechRecognition.abort();\r\n\r\n            setTimeout(() => {\r\n                speechRecognition.start();\r\n                // set_state('enabled');\r\n            }, 500)\r\n\r\n            sound('ready');\r\n            set_state('command');\r\n            update_status(input, 'success');\r\n            return true;\r\n        }\r\n        update_status(input, 'danger');\r\n        set_state('enabled');\r\n        return false;\r\n    }\r\n\r\n    var match_command = (input) => {\r\n\r\n        var found = false;\r\n        var commands_schemes = commands.map((i, el) => {\r\n            return i.scheme;\r\n        });\r\n\r\n        var index = find_match(input, commands_schemes)\r\n        if (index !== null) {\r\n            found = commands[index[0]];\r\n\r\n            var found_scheme = found.scheme[index[2]].trim();\r\n\r\n            if (found.params.placeholders) {\r\n                var matched_params = {};\r\n                var input_values = extract(found_scheme, input);\r\n                let plhdrs = found.params.placeholders;\r\n                let arr_plhdrs = Object.entries(plhdrs);\r\n\r\n                arr_plhdrs.forEach((element, key) => {\r\n                    var el_name = element[0];\r\n                    var el_options = element[1];\r\n\r\n                    if (!el_name.startsWith('_')) {\r\n\r\n                        var list = el_options.map((i, el) => {\r\n                            return i.value;\r\n                        });\r\n\r\n                        var match_index = find_match(input_values[el_name], list);\r\n                        if (match_index !== null) {\r\n                            matched_params[el_name] = el_options[match_index[0]].id;\r\n                        }\r\n                    } else {\r\n                        matched_params[el_name] = input_values[el_name];\r\n                    }\r\n                });\r\n\r\n                if (arr_plhdrs.length !== Object.entries(matched_params).length) {\r\n                    set_state('enabled');\r\n                    sound('timeout');\r\n                    return false;\r\n                }\r\n                found.params = {\r\n                    ...found.params,\r\n                    ...matched_params\r\n                };\r\n            }\r\n            found.command_exec(found.params);\r\n            sound('correct');\r\n            set_state('enabled');\r\n            update_status(input, 'success');\r\n            return true;\r\n        }\r\n        say(strings[current_short_langcode]['unknown_command'] + ': \"' + input + '\"');\r\n        set_state('enabled');\r\n        update_status(input, 'danger');\r\n        sound('timeout');\r\n        return false;\r\n    }\r\n\r\n    var sound = (type) => {\r\n        const audio = new Audio(eval(type + '_sound_path'));\r\n        audio.play();\r\n    }\r\n\r\n    var cancel = false;\r\n\r\n    var say = (text) => {\r\n        if (speechRecognition) {\r\n            speechRecognition.stop();\r\n        }\r\n\r\n        // SAY\r\n        var msg = new SpeechSynthesisUtterance();\r\n        // var voices = window.speechSynthesis.getVoices();\r\n        // msg.voice = voices[0]; // Note: some voices don't support altering params\r\n        // msg.voiceURI = 'native';\r\n        // msg.volume = 1; // 0 to 1\r\n        // msg.rate = 1; // 0.1 to 10\r\n        // msg.pitch = 0; //0 to 2\r\n        // msg.lang = 'en-US';\r\n        // msg.lang = current_langcode;\r\n        var lang_for_speech = '';\r\n\r\n        if (current_short_langcode === 'iw') {\r\n            lang_for_speech = 'he';\r\n        } else {\r\n            // TODO: HACK speech HE in EN\r\n            function contains_heb(str) {\r\n                return (/[\\u0590-\\u05FF]/).test(str);\r\n            }\r\n            var includes_he = contains_heb(text);\r\n            if (includes_he) {\r\n                lang_for_speech = 'he';\r\n            } else {\r\n                lang_for_speech = current_short_langcode;\r\n            }\r\n        }\r\n        msg.lang = lang_for_speech;\r\n        msg.onend = function (e) {\r\n            if (!cancel) {\r\n                speechRecognition.start();\r\n                document.querySelector(\"#vc-start\").style.display = \"none\";\r\n                document.querySelector(\"#vc-stop\").style.display = \"block\";\r\n            } else {\r\n\r\n                document.querySelector(\"#vc-start\").style.display = \"block\";\r\n                document.querySelector(\"#vc-stop\").style.display = \"none\";\r\n                cancel = false;\r\n            }\r\n        };\r\n\r\n        msg.onstart = function (e) {\r\n            document.querySelector(\"#vc-start\").style.display = \"none\";\r\n            document.querySelector(\"#vc-stop\").style.display = \"block\";\r\n        };\r\n\r\n        msg.text = text;\r\n        speechSynthesis.speak(msg);\r\n\r\n        return;\r\n    }\r\n    var last_said = []\r\n    var said_count = 0;\r\n    let update_status = (info, type = 'info') => {\r\n        last_said.push({\r\n            id: said_count,\r\n            type: type,\r\n            info: info,\r\n        });\r\n        said_count++;\r\n        render_status();\r\n    }\r\n    let render_status = (length = 10) => {\r\n        var html = $('<div>');\r\n        last_said.sort(function (a, b) {\r\n            if (a.id < b.id) return 1;\r\n            if (a.id > b.id) return -1;\r\n            return 0;\r\n        });\r\n        var count = 0;\r\n        for (const element of last_said) {\r\n            var txt = $(\"<div></div>\").html(element.info).addClass('mb-0 p-1 h4 alert alert-' + element.type);\r\n            html.append(txt);\r\n            count++;\r\n            if (count >= length) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        let last = last_said[0];\r\n        $(\"#vc-status\").html($(\"<div></div>\").html(last.info).addClass('mb-0 p-1 h4 alert alert-' + last.type));\r\n        $(\"#vc-status\").attr('data-original-title', html.html())\r\n    }\r\n    var available_commands = []\r\n    let update_commands = () => {\r\n        available_commands = [];\r\n        commands.forEach(element => {\r\n            if (element.public) {\r\n                available_commands.push(element);\r\n            }\r\n        });\r\n        render_commands();\r\n    }\r\n\r\n    let help_string = {\r\n        en: 'Please say \"OK\"',\r\n        ru: 'Пожалуйста скажите \"ОК\"',\r\n        iw: 'נא להגידת \"אוקיי פטל\"',\r\n    };\r\n\r\n    let list_of_orders_title = {\r\n        en: 'List of orders',\r\n        ru: 'Список комманд',\r\n        iw: 'פקודות קוליות',\r\n    };\r\n\r\n    let strings = {\r\n        en: {\r\n            'unknown_command': 'Unknown command',\r\n        },\r\n        ru: {\r\n            'unknown_command': 'Неизвестная комманда',\r\n        },\r\n        iw: {\r\n            'unknown_command': 'פקודה לא מזוהה',\r\n        },\r\n    }; let render_commands = () => {\r\n        var html = $('<div>');\r\n\r\n        var txt = $(\"<div></div>\").html(help_string[current_short_langcode]).addClass('h2');\r\n        html.append(txt);\r\n\r\n        var txt = $(\"<div></div>\").html(list_of_orders_title[current_short_langcode]).addClass('h3');\r\n        html.append(txt);\r\n\r\n        available_commands.forEach(element => {\r\n\r\n            var txt = $(\"<div></div>\").html(element.scheme.join('<br>')).addClass('alert alert-info');\r\n            html.append(txt);\r\n        });\r\n        $(\"#vc-commands-help\").attr('data-content', html.html())\r\n    }\r\n    var set_state = (input_state) => {\r\n        switch (input_state) {\r\n            case 'enabled':\r\n                clear_all_timers();\r\n                break;\r\n            case 'disabled':\r\n                clear_all_timers();\r\n                break;\r\n            case 'command':\r\n                start_timer(timeout, () => {\r\n                    set_state('enabled');\r\n                    sound('timeout');\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        state = input_state;\r\n    }\r\n\r\n    var grammararray = [];\r\n    let collect_grammar = () => {\r\n        grammararray = grammararray.concat(tokens.join(' '));\r\n\r\n        commands.forEach(element => {\r\n            grammararray = grammararray.concat(element.scheme.join(' ')); // TODO: from array\r\n        });\r\n        grammararray = [...new Set(grammararray)];\r\n    }\r\n\r\n    set_state('enabled');\r\n\r\n\r\n    var start_button = document.querySelector(\"#vc-start\");\r\n    var stop_button = document.querySelector(\"#vc-stop\");\r\n    var speechRecognition;\r\n    function init_vtt() {\r\n        if (\"webkitSpeechRecognition\" in window) {\r\n\r\n            // set_state('enabled');\r\n\r\n            speechRecognition = new webkitSpeechRecognition();\r\n            var SpeechGrammarList = SpeechGrammarList || window.webkitSpeechGrammarList\r\n            if (SpeechGrammarList) {\r\n                var speechRecognitionList = new SpeechGrammarList();\r\n                var grammar = '#JSGF V1.0; grammar commands; public <command> = ' + grammararray.join(' | ') + ' ;'\r\n                speechRecognitionList.addFromString(grammar, 1);\r\n                speechRecognition.grammars = speechRecognitionList;\r\n            }\r\n            speechRecognition.maxAlternatives = 1;\r\n            speechRecognition.continuous = true;\r\n            speechRecognition.interimResults = true;\r\n            speechRecognition.lang = current_langcode;\r\n            let final_transcript = \"\";\r\n            speechRecognition.onstart = () => {\r\n                // get_commands();\r\n                document.querySelector(\"#vc-start\").style.display = \"none\";\r\n                document.querySelector(\"#vc-stop\").style.display = \"block\";\r\n                // set_state('enabled');\r\n            };\r\n            speechRecognition.onerror = (e) => {\r\n                // document.querySelector(\"#vc-start\").style.display = \"block\";\r\n                // document.querySelector(\"#vc-stop\").style.display = \"none\";\r\n\r\n                speechRecognition.start();\r\n\r\n\r\n            };\r\n            speechRecognition.onend = () => {\r\n                if (start_button) {\r\n                    start_button.style.display = \"block\";\r\n                }\r\n                if (stop_button) {\r\n                    stop_button.style.display = \"none\";\r\n                }\r\n\r\n                document.querySelector(\"#vc-start\").style.display = \"block\";\r\n                document.querySelector(\"#vc-stop\").style.display = \"none\";\r\n\r\n                if (!cancel) {\r\n                    speechRecognition.start();\r\n                }\r\n\r\n\r\n                // set_state('disabled');\r\n            };\r\n            speechRecognition.onresult = (event) => {\r\n                let interim_transcript = \"\";\r\n\r\n                for (let i = event.resultIndex; i < event.results.length; ++i) {\r\n\r\n                    if (event.results[i].isFinal) {\r\n                        final_transcript = event.results[i][0].transcript.trim();\r\n                        if (state === 'enabled') {\r\n                            // match_token(final_transcript);\r\n                        } else if (state === 'command') {\r\n                            match_command(final_transcript);\r\n                        }\r\n                    } else {\r\n                        interim_transcript = event.results[i][0].transcript.trim();\r\n\r\n                        // var words = interim_transcript.split(); // TODO:\r\n\r\n                        if (state === 'enabled') {\r\n                            match_token(interim_transcript);\r\n                        } else if (state === 'command') {\r\n                            // match_command(interim_transcript);\r\n                        }\r\n\r\n\r\n                        if (state === 'command') {\r\n                            start_timer(timeout, () => {\r\n                                set_state('enabled');\r\n                                sound('timeout');\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // for (let i = event.resultIndex; i < event.results.length; ++i) {\r\n                //     if (event.results[i].isFinal) {\r\n                //         final_transcript = event.results[i][0].transcript.trim();\r\n                //         if (state == 'enabled') {\r\n                //             // match_token(final_transcript);\r\n                //         } else if (state == 'command') {\r\n                //             // match_command(final_transcript);\r\n                //         }\r\n                //     } else {\r\n                //         // interim_transcript += event.results[i][0].transcript;\r\n                //         interim_transcript = event.results[i][0].transcript;\r\n\r\n                //         if (state == 'enabled') {\r\n                //             match_token(interim_transcript);\r\n                //         } else if (state == 'command') {\r\n                //             match_command(interim_transcript);\r\n                //         }\r\n\r\n\r\n                //         if (state == 'command') {\r\n                //             start_timer(timeout, () => {\r\n                //                 set_state('enabled');\r\n                //                 sound('timeout');\r\n                //             })\r\n                //         }\r\n                //     }\r\n                // }\r\n\r\n\r\n\r\n\r\n            };\r\n            listeners();\r\n        } else { }\r\n    }\r\n    let listeners = () => {\r\n        $(document).on(\"click\", \"#vc-start\", function () {\r\n            speechRecognition.start(); // TODO:\r\n        });\r\n        $(document).on(\"click\", \"#vc-stop\", function () {\r\n            cancel = true;\r\n            if (speechRecognition) {\r\n                speechRecognition.stop();\r\n                speechSynthesis.cancel();\r\n            }\r\n        });\r\n    }\r\n    var ready_sound_path = '';\r\n    var correct_sound_path = '';\r\n    var timeout_sound_path = '';\r\n    var please_repeat_sound_path = '';\r\n    var sample_sound_path = '';\r\n\r\n    // WORD 2 INT\r\n    var Small = {\r\n        // EN\r\n        'zero': 0,\r\n        'one': 1,\r\n        'two': 2,\r\n        'three': 3,\r\n        'four': 4,\r\n        'five': 5,\r\n        'six': 6,\r\n        'seven': 7,\r\n        'eight': 8,\r\n        'nine': 9,\r\n        'ten': 10,\r\n\r\n        // HE\r\n        'אחד': 1,\r\n        'אחת': 1,\r\n        'שני': 2,\r\n        'שתיים': 2,\r\n        'שלושת': 3,\r\n        'שלוש': 3,\r\n        'ארבעת': 4,\r\n        'ארבע': 4,\r\n        'חמשת': 5,\r\n        'חמש': 5,\r\n        'ששת': 6,\r\n        'שש': 6,\r\n        'שבעת': 7,\r\n        'שבע': 7,\r\n        'שמונת': 8,\r\n        'שְמוֹנֶה': 8,\r\n        'תשעת': 9,\r\n        'תשע': 9,\r\n        'עשרת': 10,\r\n        'עשר': 10,\r\n\r\n        // 'eleven': 11,\r\n        // 'twelve': 12,\r\n        // 'thirteen': 13,\r\n        // 'fourteen': 14,\r\n        // 'fifteen': 15,\r\n        // 'sixteen': 16,\r\n        // 'seventeen': 17,\r\n        // 'eighteen': 18,\r\n        // 'nineteen': 19,\r\n        // 'twenty': 20,\r\n        // 'thirty': 30,\r\n        // 'forty': 40,\r\n        // 'fifty': 50,\r\n        // 'sixty': 60,\r\n        // 'seventy': 70,\r\n        // 'eighty': 80,\r\n        // 'ninety': 90\r\n    };\r\n    var Magnitude = {\r\n        'thousand': 1000,\r\n        'million': 1000000,\r\n        'billion': 1000000000,\r\n        'trillion': 1000000000000,\r\n        'quadrillion': 1000000000000000,\r\n        'quintillion': 1000000000000000000,\r\n        'sextillion': 1000000000000000000000,\r\n        'septillion': 1000000000000000000000000,\r\n        'octillion': 1000000000000000000000000000,\r\n        'nonillion': 1000000000000000000000000000000,\r\n        'decillion': 1000000000000000000000000000000000,\r\n    };\r\n\r\n    var a, n, g;\r\n    function text2num(s) {\r\n        a = s.toString().split(/[\\s-]+/);\r\n        n = 0;\r\n        g = 0;\r\n        a.forEach(feach);\r\n        return n + g;\r\n    }\r\n    function feach(w) {\r\n        var x = Small[w];\r\n        if (x != null) {\r\n            g = g + x;\r\n        }\r\n        else if (w === \"hundred\") {\r\n            g = g * 100;\r\n        }\r\n        else {\r\n            x = Magnitude[w];\r\n            if (x != null) {\r\n                n = n + g * x\r\n                g = 0;\r\n            }\r\n            else {\r\n                if (w != null) {\r\n                    g = w;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ////////////////////////////\r\n\r\n    return {\r\n        reinit: function () {\r\n            reinit();\r\n        },\r\n        init: function (currentlangcode, paths, inputtokens, inputschemes) {\r\n            ready_sound_path = paths[0];\r\n            correct_sound_path = paths[1];\r\n            timeout_sound_path = paths[2];\r\n            please_repeat_sound_path = paths[3];\r\n            sample_sound_path = paths[4];\r\n            tokens = inputtokens;\r\n            schemes = inputschemes;\r\n            set_lang(currentlangcode);\r\n            init_vtt();\r\n        },\r\n        stop: function () {\r\n            if (speechRecognition) {\r\n                speechRecognition.stop();\r\n            }\r\n        },\r\n        init_listeners: function () {\r\n            listeners();\r\n        },\r\n        update_commands: function () {\r\n            get_commands();\r\n            update_commands();\r\n            // collect_grammar();\r\n        },\r\n        reload: function (\r\n            courseid, activityid, moduletype, selectgroupid,\r\n        ) {\r\n            $(\"body\").on('DOMSubtreeModified', \"#teamwork\", function () {\r\n                var groups = [];\r\n                var groups_elements = $(\"input[data-handler='input_team_name']\");\r\n                Array.from(groups_elements).forEach(element => {\r\n                    groups.push({\r\n                        id: element.dataset.team_id,\r\n                        value: element.value,\r\n                    });\r\n                });\r\n\r\n                var all_students = [];\r\n                var students_elements = $(\"div.teamwork_student\");\r\n                Array.from(students_elements).forEach(element => {\r\n                    all_students.push({\r\n                        id: element.dataset.student_id,\r\n                        value: element.innerText,\r\n                    });\r\n                });\r\n\r\n                var avail_students = [];\r\n                var students_elements = $(\"#studentList div.teamwork_student\");\r\n                Array.from(students_elements).forEach(element => {\r\n                    avail_students.push({\r\n                        id: element.dataset.student_id,\r\n                        value: element.innerText,\r\n                    });\r\n                });\r\n\r\n                var index = default_commands.map(e => e.command_id).indexOf('add_new_teamcard');\r\n                default_commands[index].params = {\r\n                    courseid: courseid,\r\n                    activityid: activityid,\r\n                    moduletype: moduletype,\r\n                    selectgroupid: selectgroupid,\r\n                }\r\n\r\n                var index = default_commands.map(e => e.command_id).indexOf('add_new_named_teamcard');\r\n                default_commands[index].params = {\r\n                    courseid: courseid,\r\n                    activityid: activityid,\r\n                    moduletype: moduletype,\r\n                    selectgroupid: selectgroupid,\r\n                    placeholders: {\r\n                        _teamname: null,\r\n                    }\r\n                }\r\n\r\n                var index = default_commands.map(e => e.command_id).indexOf('create_numbers_teamcard');\r\n                default_commands[index].params = {\r\n                    courseid: courseid,\r\n                    activityid: activityid,\r\n                    moduletype: moduletype,\r\n                    selectgroupid: selectgroupid,\r\n                    placeholders: {\r\n                        _number: null,\r\n                    }\r\n                }\r\n\r\n                var index = default_commands.map(e => e.command_id).indexOf('drag_student_card');\r\n                default_commands[index].params = {\r\n                    courseid: courseid,\r\n                    activityid: activityid,\r\n                    moduletype: moduletype,\r\n                    selectgroupid: selectgroupid,\r\n                    placeholders: {\r\n                        userfullname: all_students,\r\n                        teamname: groups,\r\n                    }\r\n                }\r\n\r\n                var index = default_commands.map(e => e.command_id).indexOf('delete_teamcard');\r\n                default_commands[index].params = {\r\n                    courseid: courseid,\r\n                    activityid: activityid,\r\n                    moduletype: moduletype,\r\n                    selectgroupid: selectgroupid,\r\n                    placeholders: {\r\n                        // userfullname: students,\r\n                        teamname: groups,\r\n                    }\r\n                }\r\n\r\n                var index = default_commands.map(e => e.command_id).indexOf('read_users');\r\n                default_commands[index].params = {\r\n                    students: avail_students,\r\n                }\r\n\r\n                var index = default_commands.map(e => e.command_id).indexOf('read_teams');\r\n                default_commands[index].params = {\r\n                    groups: groups,\r\n                }\r\n\r\n            });\r\n        },\r\n    };\r\n});"],"names":["define","$","Ajax","timeout","timer","timers","clear_all_timers","forEach","i","t","clearInterval","start_timer","duration","callback","countDownDate","Date","getTime","x","setInterval","now","distance","Math","floor","includes","push","current_langcode","current_short_langcode","set_lang","lang","split","tokens","schemes","commands","default_commands","public","scheme","command_id","command_exec","sound","params","require","render","l_tw_init","courseid","activityid","moduletype","selectgroupid","add_new_card","setDefaultData","studentList","teamsCard","teamname","_teamname","number","text2num","_number","index","loadingIcon","draguserid","userfullname","stud_card","groupid","find","append","allTeamsBlocks","Array","from","document","querySelectorAll","allTeams","item","team","teamid","dataset","team_id","studentid","student","student_id","newteamspost","JSON","stringify","Number","show","call","methodname","args","removeteam","done","data","remove","fail","popup","error","delete_card","user_list","students","element","value","say","group_list","groups","get_commands","scheme_id","state","similarity","s1","s2","longer","shorter","length","longerLength","editDistance","parseFloat","toLowerCase","costs","lastValue","j","newValue","charAt","min","stringSimilarity","a","b","_stringSimilarity","prep","bg1","bigrams","bg2","c1","count","c2","uniq","reduce","k","str","replace","slice","map","c","xs","Set","find_match","input","stack","threshold","result","list","el_weight","sim","scheme_option","el","trim","sort","extract","template","templateParts","extracted","possibleKey","keyPrefix","nextPrefix","substringStartIndex","indexOf","substringEndIndex","substring","match_token","match","some","speechRecognition","abort","setTimeout","start","set_state","update_status","match_command","found","commands_schemes","found_scheme","placeholders","matched_params","input_values","plhdrs","arr_plhdrs","Object","entries","key","el_name","el_options","startsWith","match_index","id","strings","type","audio","Audio","eval","play","cancel","text","stop","msg","SpeechSynthesisUtterance","lang_for_speech","test","onend","e","querySelector","style","display","onstart","speechSynthesis","speak","last_said","said_count","info","render_status","html","txt","addClass","last","attr","available_commands","update_commands","render_commands","help_string","en","ru","iw","list_of_orders_title","join","input_state","grammararray","collect_grammar","concat","start_button","stop_button","init_vtt","window","webkitSpeechRecognition","SpeechGrammarList","webkitSpeechGrammarList","speechRecognitionList","grammar","addFromString","grammars","maxAlternatives","continuous","interimResults","final_transcript","onerror","onresult","event","interim_transcript","resultIndex","results","isFinal","transcript","listeners","on","ready_sound_path","correct_sound_path","timeout_sound_path","please_repeat_sound_path","sample_sound_path","Small","Magnitude","n","g","s","toString","feach","w","reinit","init","currentlangcode","paths","inputtokens","inputschemes","init_listeners","reload","groups_elements","all_students","students_elements","innerText","avail_students"],"mappings":"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"}