{"version":3,"file":"voicecontrol.min.js","sources":["../src/voicecontrol.js"],"sourcesContent":["define([\n    'jquery',\n    'core/ajax',\n], function (\n    $,\n    Ajax,\n) {\n    'use strict';\n\n    var timeout = 4;\n    var timer = false;\n    var timers = [];\n    var clear_all_timers = () => {\n        timers.forEach((i, t) => {\n            clearInterval(i);\n        });\n        timers = [];\n        timer = false;\n    }\n    const start_timer = (duration, callback) => {\n        if (timer) {\n            clear_all_timers()\n        }\n        var countDownDate = new Date().getTime() + (duration * 1000);\n        var x = setInterval(function () {\n            var now = new Date().getTime();\n            var distance = countDownDate - now;\n            var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n            if (distance < 0) {\n                clear_all_timers();\n                clearInterval(x);\n                callback();\n            }\n        }, 1000);\n        if (!timers.includes(x)) {\n            timers.push(x);\n            timer = true;\n        }\n    }\n    var current_langcode = '';\n    var current_short_langcode = '';\n    var set_lang = (lang = 'en-US') => {\n        current_langcode = lang;\n        current_short_langcode = lang.split('-')[0];\n    }\n\n    // TODO: Get tokens.\n    var tokens = [];\n    var schemes = [];\n    var commands = [];\n    var default_commands = [\n        {\n            public: true,\n            scheme: {\n                // en: 'sing a song',\n                // iw: 'תשיר',\n                // ru: 'спой песенку',\n            },\n            command_id: 'sing_a_song',\n            command_exec: () => {\n                sound('sample');\n            },\n            params: {},\n        },\n        // {\n        //     public: false,\n        //     scheme: {\n        //         // en: '11 | eleven',\n        //         // iw: '11',\n        //         // ru: '11 | одинадцать',\n        //     },\n        //     command_id: '11',\n        //     command_exec: () => {\n        //         sound('please_repeat');\n        //     },\n        //     params: {},\n        // },\n        {\n            public: true,\n            command_id: 'add_new_teamcard',\n            scheme: {\n                // en: 'add a team | add new team',\n                // iw: 'תוסיף צוות | תוסיף צוות חדש',\n                // ru: 'добавь новую команду',\n            },\n            params: {\n            },\n            command_exec: function (params) {\n                require([\n                    'local_teamwork/render',\n                    'local_teamwork/init',\n                ], function (\n                    render,\n                    l_tw_init,\n                ) {\n                    let courseid = params.courseid;\n                    let activityid = params.activityid;\n                    let moduletype = params.moduletype;\n                    let selectgroupid = params.selectgroupid;\n                    l_tw_init.add_new_card(\n                        courseid,\n                        activityid,\n                        moduletype,\n                        selectgroupid,\n                        null,\n                        function () {\n                            render.setDefaultData();\n                            render.studentList();\n                            render.teamsCard();\n                        }\n                    );\n                });\n            }\n        },\n        {\n            public: true,\n            command_id: 'add_new_named_teamcard',\n            scheme: {\n                // en: 'please create a team {_teamname} | create a team {_teamname}',\n                // iw: 'נא ליצור צוות {_teamname} | אנא ליצור צוות {_teamname}',\n                // ru: 'добав команду {_teamname}',\n            },\n            params: {\n            },\n            command_exec: function (params) {\n                require([\n                    'local_teamwork/render',\n                    'local_teamwork/init',\n                ], function (\n                    render,\n                    l_tw_init,\n                ) {\n                    let courseid = params.courseid;\n                    let activityid = params.activityid;\n                    let moduletype = params.moduletype;\n                    let selectgroupid = params.selectgroupid;\n                    let teamname = params._teamname;\n                    l_tw_init.add_new_card(\n                        courseid,\n                        activityid,\n                        moduletype,\n                        selectgroupid,\n                        teamname,\n                        function () {\n                            render.setDefaultData();\n                            render.studentList();\n                            render.teamsCard();\n                        }\n                    );\n                });\n            }\n        },\n        {\n            public: true,\n            command_id: 'create_numbers_teamcard', // create {number} teams\n            scheme: {\n                // en: 'create {_number} teams',\n                // iw: 'יצירת {_number} צוותים',\n                // ru: 'добавь {_number} команд',\n            },\n            params: {\n            },\n            command_exec: function (params) {\n                require([\n                    'local_teamwork/render',\n                    'local_teamwork/init',\n                ], function (\n                    render,\n                    l_tw_init,\n                ) {\n                    var number = text2num(params._number);\n                    let courseid = params.courseid;\n                    let activityid = params.activityid;\n                    let moduletype = params.moduletype;\n                    let selectgroupid = params.selectgroupid;\n                    for (let index = 0; index < number; index++) {\n                        l_tw_init.add_new_card(\n                            courseid,\n                            activityid,\n                            moduletype,\n                            selectgroupid,\n                            null,\n                            function () {\n                                render.setDefaultData();\n                                render.studentList();\n                                render.teamsCard();\n                            }\n                        );\n                    }\n                });\n            }\n        },\n        {\n            public: true,\n            command_id: 'drag_student_card',\n            scheme: {\n                // en: 'move {userfullname} to {teamname} card | add {userfullname} to {teamname} card',\n                // iw: 'תעביר {userfullname} ל{teamname} | תעביר {userfullname} לצוות {teamname} | נא להעביר {userfullname} לצוות {teamname} | נא להעביר {userfullname} ל {teamname} | נא להעביר {userfullname} ל{teamname}',\n                // ru: 'перемести {userfullname} в карточку {teamname}',\n            },\n            params: {\n            },\n            command_exec: function (params) {\n                require([\n                    'local_teamwork/render',\n                    'core/ajax',\n                    'local_teamwork/loading',\n                ], function (\n                    render,\n                    Ajax,\n                    loadingIcon,\n                ) {\n                    var draguserid = params.userfullname; // Yea it's ID, not name.\n                    var stud_card = $(\"div.teamwork_student[data-student_id=\" + draguserid + \"]\");\n                    var groupid = params.teamname; // Yea it's ID, not name.\n                    var group_card = $(\"div.teamwork_team[data-team_id=\" + groupid + \"]\").find('.teamwork_team-inner.draggable');\n                    group_card.append(stud_card);\n                    const allTeamsBlocks = Array.from(document.querySelectorAll('div[data-team_id]'));\n                    const allTeams = [];\n                    allTeamsBlocks.forEach((item) => {\n                        let team = {};\n                        team.teamid = item.dataset.team_id;\n                        team.studentid = [];\n                        let allStudents = Array.from(item.querySelectorAll('.teamwork_student'));\n                        allStudents.forEach((student) => {\n                            team.studentid.push(student.dataset.student_id);\n                        });\n                        allTeams.push(team);\n                    });\n                    let courseid = params.courseid;\n                    let activityid = params.activityid;\n                    let moduletype = params.moduletype;\n                    let selectgroupid = params.selectgroupid;\n                    let newteamspost = JSON.stringify(allTeams);\n                    draguserid = Number(draguserid);\n                    loadingIcon.show();\n                    Ajax.call([{\n                        methodname: 'local_teamwork_drag_student_card',\n                        args: {\n                            courseid: courseid,\n                            activityid: activityid,\n                            moduletype: moduletype,\n                            selectgroupid: selectgroupid,\n                            newteamspost: newteamspost,\n                            draguserid: draguserid,\n                            removeteam: false,\n                        },\n                        done: function (data) {\n                            loadingIcon.remove();\n                            render.setDefaultData();\n                            render.studentList();\n                            render.teamsCard();\n                        },\n                        fail: function () {\n                            loadingIcon.remove();\n                            popup.error();\n                        }\n                    }]);\n                });\n            }\n        },\n        {\n            public: true,\n            command_id: 'delete_teamcard',\n            scheme: {\n                // en: 'delete {teamname}',\n                // iw: 'מחק צוות {teamname} |  תמחק צוות {teamname}',\n                // ru: 'удали команду {teamname}',\n            },\n            params: {\n            },\n            command_exec: function (params) {\n                require([\n                    'local_teamwork/render',\n                    'core/ajax',\n                    'local_teamwork/loading',\n                    'local_teamwork/init',\n                ], function (\n                    render,\n                    Ajax,\n                    loadingIcon,\n                    l_tw_init,\n                ) {\n                    var teamid = params.teamname; // Yea it's ID, not name.\n                    let courseid = params.courseid;\n                    let activityid = params.activityid;\n                    let moduletype = params.moduletype;\n                    l_tw_init.delete_card(teamid, courseid, activityid, moduletype, function () {\n                        render.setDefaultData();\n                        render.teamsCard();\n                        render.studentList();\n                    });\n                });\n            }\n        },\n        {\n            public: true,\n            command_id: 'read_users',\n            scheme: {\n                // en: 'read user lists | read users',\n                // iw: 'רשימת צוותים | תקראי רשימת צוותים',\n                // ru: 'прочитай пользователей',\n            },\n            params: {\n            },\n            command_exec: function (params) {\n                require([\n                    'local_teamwork/render',\n                    'core/ajax',\n                    'local_teamwork/loading',\n                ], function (\n                    render,\n                    Ajax,\n                    loadingIcon,\n                ) {\n                    var user_list = '';\n                    params.students.forEach(element => {\n                        user_list += element.value + ', ';\n                    });\n                    say(user_list);\n                });\n            }\n        },\n        {\n            public: true,\n            command_id: 'read_teams',\n            scheme: {\n                // en: 'read teams',\n                // iw: 'תקראי רשימת צוותים ', // TODO:\n                // ru: 'прочитай команды',\n            },\n            params: {\n            },\n            command_exec: function (params) {\n                require([\n                    'local_teamwork/render',\n                    'core/ajax',\n                    'local_teamwork/loading',\n                ], function (\n                    render,\n                    Ajax,\n                    loadingIcon,\n                ) {\n                    var group_list = '';\n                    params.groups.forEach(element => {\n                        group_list += element.value + ', ';\n                    });\n                    say(group_list);\n                });\n            }\n        },\n    ];\n\n    // TODO: commands w/ confirmation?\n    let get_commands = () => {\n\n        // console.log('get_commands');\n\n        // console.log('schemes');\n        // console.log(schemes);\n\n        default_commands.forEach((element, index) => {\n\n            var scheme_id = element.command_id;\n            // console.log(scheme_id);\n\n\n\n            default_commands[index].scheme = schemes[scheme_id];\n        });\n\n        // console.log('default_commands');\n        // console.log(default_commands);\n\n        commands = default_commands;\n\n        // console.log('commands');\n        // console.log(commands);\n    }\n    // get_commands();\n    var state = 'disabled'; // enabled, token, command...\n    //////////////////////////////////////////////////////////////////////////////////////\n    let similarity = (s1, s2) => {\n        var longer = s1;\n        var shorter = s2;\n        if (s1.length < s2.length) {\n            longer = s2;\n            shorter = s1;\n        }\n        var longerLength = longer.length;\n        if (longerLength == 0) {\n            return 1.0;\n        }\n        return (longerLength - editDistance(longer, shorter)) / parseFloat(longerLength);\n    }\n    let editDistance = (s1, s2) => {\n        s1 = s1.toLowerCase();\n        s2 = s2.toLowerCase();\n        var costs = new Array();\n        for (var i = 0; i <= s1.length; i++) {\n            var lastValue = i;\n            for (var j = 0; j <= s2.length; j++) {\n                if (i == 0)\n                    costs[j] = j;\n                else {\n                    if (j > 0) {\n                        var newValue = costs[j - 1];\n                        if (s1.charAt(i - 1) != s2.charAt(j - 1))\n                            newValue = Math.min(Math.min(newValue, lastValue),\n                                costs[j]) + 1;\n                        costs[j - 1] = lastValue;\n                        lastValue = newValue;\n                    }\n                }\n            }\n            if (i > 0)\n                costs[s2.length] = lastValue;\n        }\n        return costs[s2.length];\n    }\n    //////////////////////////////////////////////////////////\n    const stringSimilarity = (a, b) =>\n        _stringSimilarity(prep(a), prep(b))\n\n    const _stringSimilarity = (a, b) => {\n        const bg1 = bigrams(a)\n        const bg2 = bigrams(b)\n        const c1 = count(bg1)\n        const c2 = count(bg2)\n        const combined = uniq([...bg1, ...bg2])\n            .reduce((t, k) => t + (Math.min(c1[k] || 0, c2[k] || 0)), 0)\n        return 2 * combined / (bg1.length + bg2.length)\n    }\n\n    const prep = (str) => {  // TODO: unicode support?\n\n        // console.log('current_short_langcode in prep');\n        // console.log(current_short_langcode);\n\n        return current_short_langcode != 'iw' ? str.toLowerCase().replace(/[^\\w\\s]/g, ' ').replace(/\\s+/g, ' ') : str.toLowerCase().replace('^[a-z\\u0590-\\u05fe]+$', ' ');\n    }\n\n    // str.toLowerCase().replace(/[^\\w\\s]/g, ' ').replace(/\\s+/g, ' ')\n    // str.toLowerCase().replace('^[a-z\\u0590-\\u05fe]+$', ' ')\n\n    const bigrams = (str) =>\n        [...str].slice(0, -1).map((c, i) => c + str[i + 1])\n\n    const count = (xs) =>\n        xs.reduce((a, x) => ((a[x] = (a[x] || 0) + 1), a), {})\n\n    const uniq = (xs) =>\n        [... new Set(xs)]\n    //////////////////////////////////////////////////////////////////////\n\n    let find_match = (input, stack, threshold = 0.35) => {\n        // // console.log('find_match'); console.log('input');\n        // console.log(input);\n        // console.log('stack');\n        // console.log(stack);\n\n        var result = null;\n        var list = [];\n        input = input.toLowerCase();\n        stack.forEach((element, index) => {\n\n            // console.log('element');\n            // console.log(index + ' - ' + element);\n\n            // console.log('typeof(element)');\n            // console.log(typeof (element));\n            var el_vars = typeof (element) != 'string' ? element : [element];            // var el_vars = element;\n            var el_weight = 0;\n            var sim = 0;\n            var scheme_option = 0;\n            el_vars.forEach((el, i) => {\n                // sim = similarity(input, el.toLowerCase().trim());\n                sim = stringSimilarity(input, el.toLowerCase().trim()); // Another variant. HE fails!\n                if (sim > el_weight) {\n                    el_weight = sim;\n                    scheme_option = i;\n                }\n            });\n            list.push([index, el_weight, scheme_option]);\n        });\n\n        // console.log('list: ');\n        // console.table(list);\n\n        list.sort((a, b) => b[1] - a[1]);\n\n        // console.log('list: ');\n        // console.table(list);\n\n        result = list[0];\n        if (result[1] < threshold) {\n            return null;\n        }\n        // console.log('result');\n        // console.log(result);\n        return result;\n    }\n    const extract = (template, str) => {\n\n        const templateParts = template.split(/{|}/);\n        const extracted = {};\n        for (let index = 1; index < templateParts.length; index += 2) {\n            const\n                possibleKey = templateParts[index],\n                keyPrefix = templateParts[index - 1],\n                nextPrefix = templateParts[index + 1];\n            const substringStartIndex = str.indexOf(keyPrefix) + keyPrefix.length;\n            const substringEndIndex = nextPrefix ? str.indexOf(nextPrefix) : str.length;\n            extracted[possibleKey] = str.substring(substringStartIndex, substringEndIndex);\n        }\n        return extracted;\n    }\n\n    var match_token = (input) => {\n        // let match = find_match(input, tokens);\n        var match = false;\n\n        // tokens.forEach(token => {\n        //     if (input.includes(token)) {\n        //         match = true;\n        //     }\n        // });\n\n\n        tokens.some(function (el) {\n            // console.log(el);\n            if (input.includes(el)) {\n                match = true;\n                return;\n            }\n        });\n\n        if (match) {\n\n            console.log('speechRecognition');\n            console.log(speechRecognition);\n\n            // debugger;\n            console.log('speechRecognition STOP');\n            // speechRecognition.abort();\n            speechRecognition.abort();\n\n\n            setTimeout(() => {\n                speechRecognition.start();\n                // set_state('enabled');\n                console.log('speechRecognition START');\n            }, 500)\n\n\n\n            sound('ready');\n            set_state('command');\n            update_status(input, 'success');\n            return true;\n        }\n        update_status(input, 'danger');\n        set_state('enabled');\n        return false;\n    }\n\n    var match_command = (input) => {\n\n        // console.log('input: ' + input);\n\n        var found = false;\n        var commands_schemes = commands.map((i, el) => {\n            return i.scheme;\n        });\n\n        var index = find_match(input, commands_schemes)\n        if (index !== null) {\n            found = commands[index[0]];\n\n            var found_scheme = found.scheme[index[2]].trim();\n\n            // console.log('found command: ' + found_scheme);\n\n            if (found.params.placeholders) {\n                var matched_params = {};\n                var input_values = extract(found_scheme, input);\n                let plhdrs = found.params.placeholders;\n                let arr_plhdrs = Object.entries(plhdrs);\n\n                // console.log('arr_plhdrs');\n                // console.log(arr_plhdrs);\n\n                arr_plhdrs.forEach((element, key) => {\n                    var el_name = element[0];\n                    var el_options = element[1];\n\n                    if (!el_name.startsWith('_')) {\n\n                        var list = el_options.map((i, el) => {\n                            return i.value;\n                        });\n\n                        var match_index = find_match(input_values[el_name], list);\n                        if (match_index !== null) {\n                            matched_params[el_name] = el_options[match_index[0]].id;\n                        }\n                    } else {\n                        matched_params[el_name] = input_values[el_name];\n                    }\n                });\n\n                // console.log('matched_params: ');\n                // console.table(matched_params);\n                if (arr_plhdrs.length != Object.entries(matched_params).length) {\n                    set_state('enabled');\n                    sound('timeout');\n                    return false;\n                }\n                found.params = {\n                    ...found.params,\n                    ...matched_params\n                };\n            }\n            found.command_exec(found.params);\n            sound('correct');\n            set_state('enabled');\n            update_status(input, 'success');\n            return true;\n        }\n        say(strings[current_short_langcode]['unknown_command'] + ': \"' + input + '\"');\n        set_state('enabled');\n        update_status(input, 'danger');\n        sound('timeout');\n        return false;\n    }\n\n    var sound = (type) => {\n        const audio = new Audio(eval(type + '_sound_path'));\n        audio.play();\n    }\n\n    var cancel = false;\n\n    var say = (text) => {\n        if (speechRecognition) {\n            speechRecognition.stop();\n        }\n\n        // SAY\n        var msg = new SpeechSynthesisUtterance();\n        // var voices = window.speechSynthesis.getVoices();\n        // msg.voice = voices[0]; // Note: some voices don't support altering params\n        // msg.voiceURI = 'native';\n        // msg.volume = 1; // 0 to 1\n        // msg.rate = 1; // 0.1 to 10\n        // msg.pitch = 0; //0 to 2\n        // msg.lang = 'en-US';\n        // msg.lang = current_langcode;\n        var lang_for_speech = '';\n\n        if (current_short_langcode == 'iw') {\n            lang_for_speech = 'he';\n        } else {\n            // TODO: HACK speech HE in EN\n            function contains_heb(str) {\n                return (/[\\u0590-\\u05FF]/).test(str);\n            }\n            var includes_he = contains_heb(text);\n            if (includes_he) {\n                lang_for_speech = 'he';\n            } else {\n                lang_for_speech = current_short_langcode;\n            }\n        }\n        msg.lang = lang_for_speech;\n        msg.onend = function (e) {\n            if (!cancel) {\n                speechRecognition.start();\n                document.querySelector(\"#vc-start\").style.display = \"none\";\n                document.querySelector(\"#vc-stop\").style.display = \"block\";\n            } else {\n\n                document.querySelector(\"#vc-start\").style.display = \"block\";\n                document.querySelector(\"#vc-stop\").style.display = \"none\";\n                cancel = false;\n            }\n        };\n\n        msg.onstart = function (e) {\n            document.querySelector(\"#vc-start\").style.display = \"none\";\n            document.querySelector(\"#vc-stop\").style.display = \"block\";\n        };\n\n        msg.text = text;\n        speechSynthesis.speak(msg);\n\n        return;\n    }\n    var last_said = []\n    var said_count = 0;\n    let update_status = (info, type = 'info') => {\n        last_said.push({\n            id: said_count,\n            type: type,\n            info: info,\n        });\n        said_count++;\n        render_status();\n    }\n    let render_status = (length = 10) => {\n        var html = $('<div>');\n        last_said.sort(function (a, b) {\n            if (a.id < b.id) return 1;\n            if (a.id > b.id) return -1;\n            return 0;\n        });\n        var count = 0;\n        for (const element of last_said) {\n            var txt = $(\"<div></div>\").html(element.info).addClass('mb-0 p-1 h4 alert alert-' + element.type);\n            html.append(txt);\n            count++;\n            if (count >= length) {\n                break;\n            }\n        }\n\n        let last = last_said[0];\n        $(\"#vc-status\").html($(\"<div></div>\").html(last.info).addClass('mb-0 p-1 h4 alert alert-' + last.type));\n        $(\"#vc-status\").attr('data-original-title', html.html())\n    }\n    var available_commands = []\n    let update_commands = () => {\n        available_commands = [];\n        commands.forEach(element => {\n            if (element.public) {\n                available_commands.push(element);\n            }\n        });\n        render_commands();\n    }\n\n    let help_string = {\n        en: 'Please say \"OK\"',\n        ru: 'Пожалуйста скажите \"ОК\"',\n        iw: 'נא להגידת \"אוקיי פטל\"',\n    };\n\n    let list_of_orders_title = {\n        en: 'List of orders',\n        ru: 'Список комманд',\n        iw: 'פקודות קוליות',\n    };\n\n    let strings = {\n        en: {\n            'unknown_command': 'Unknown command',\n        },\n        ru: {\n            'unknown_command': 'Неизвестная комманда',\n        },\n        iw: {\n            'unknown_command': 'פקודה לא מזוהה',\n        },\n    }; let render_commands = () => {\n        var html = $('<div>');\n\n        var txt = $(\"<div></div>\").html(help_string[current_short_langcode]).addClass('h2');\n        html.append(txt);\n\n        var txt = $(\"<div></div>\").html(list_of_orders_title[current_short_langcode]).addClass('h3');\n        html.append(txt);\n\n        available_commands.forEach(element => {\n\n            var txt = $(\"<div></div>\").html(element.scheme.join('<br>')).addClass('alert alert-info');\n            html.append(txt);\n        });\n        $(\"#vc-commands-help\").attr('data-content', html.html())\n    }\n    var set_state = (input_state) => {\n        switch (input_state) {\n            case 'enabled':\n                clear_all_timers();\n                break;\n            case 'disabled':\n                clear_all_timers();\n                break;\n            case 'command':\n                start_timer(timeout, () => {\n                    set_state('enabled');\n                    sound('timeout');\n                })\n                break;\n            default:\n                break;\n        }\n        state = input_state;\n    }\n\n    var grammararray = [];\n    let collect_grammar = () => {\n        grammararray = grammararray.concat(tokens.join(' '));\n\n        commands.forEach(element => {\n            grammararray = grammararray.concat(element.scheme.join(' ')); // TODO: from array\n        });\n        grammararray = [...new Set(grammararray)];\n    }\n\n    set_state('enabled');\n\n\n    var start_button = document.querySelector(\"#vc-start\");\n    var stop_button = document.querySelector(\"#vc-stop\");\n    var speechRecognition;\n    function init_vtt() {\n        if (\"webkitSpeechRecognition\" in window) {\n\n            // set_state('enabled');\n\n\n            speechRecognition = new webkitSpeechRecognition();\n            var SpeechGrammarList = SpeechGrammarList || window.webkitSpeechGrammarList\n            if (SpeechGrammarList) {\n                var speechRecognitionList = new SpeechGrammarList();\n                var grammar = '#JSGF V1.0; grammar commands; public <command> = ' + grammararray.join(' | ') + ' ;'\n                speechRecognitionList.addFromString(grammar, 1);\n                speechRecognition.grammars = speechRecognitionList;\n            }\n            speechRecognition.maxAlternatives = 1;\n            speechRecognition.continuous = true;\n            speechRecognition.interimResults = true;\n            speechRecognition.lang = current_langcode;\n            let final_transcript = \"\";\n            speechRecognition.onstart = () => {\n                // get_commands();\n                document.querySelector(\"#vc-start\").style.display = \"none\";\n                document.querySelector(\"#vc-stop\").style.display = \"block\";\n                // set_state('enabled');\n            };\n            speechRecognition.onerror = (e) => {\n                // document.querySelector(\"#vc-start\").style.display = \"block\";\n                // document.querySelector(\"#vc-stop\").style.display = \"none\";\n\n                speechRecognition.start();\n\n\n            };\n            speechRecognition.onend = () => {\n                if (start_button) {\n                    start_button.style.display = \"block\";\n                }\n                if (stop_button) {\n                    stop_button.style.display = \"none\";\n                }\n\n                document.querySelector(\"#vc-start\").style.display = \"block\";\n                document.querySelector(\"#vc-stop\").style.display = \"none\";\n\n                if (!cancel) {\n                    speechRecognition.start();\n                }\n\n\n                // set_state('disabled');\n            };\n            speechRecognition.onresult = (event) => {\n                let interim_transcript = \"\";\n\n                // console.log(event);\n\n                // if (event.) {\n\n                // }\n\n                // Array.from(event.results).forEach(el => {\n                //     console.log('----------------');\n\n                //     Array.from(el).forEach(element => {\n                //         console.log(element.confidence + ' ->              ' + element.transcript);\n                //     });\n                //     console.log('isFinal -> ' + el.isFinal);\n                //     console.log('length -> ' + el.length);\n                //     console.log('----------------');\n                //     console.log(' ');\n\n\n                // });\n\n                // console.log('==================================');\n\n                for (let i = event.resultIndex; i < event.results.length; ++i) {\n\n                    if (event.results[i].isFinal) {\n                        final_transcript = event.results[i][0].transcript.trim();\n                        if (state == 'enabled') {\n                            // match_token(final_transcript);\n                        } else if (state == 'command') {\n                            match_command(final_transcript);\n                        }\n                    } else {\n                        interim_transcript = event.results[i][0].transcript.trim();\n\n                        console.log(interim_transcript);\n\n                        // var words = interim_transcript.split(); // TODO:\n\n                        if (state == 'enabled') {\n                            match_token(interim_transcript);\n                        } else if (state == 'command') {\n                            // match_command(interim_transcript);\n                        }\n\n\n                        if (state == 'command') {\n                            start_timer(timeout, () => {\n                                set_state('enabled');\n                                sound('timeout');\n                            })\n                        }\n                    }\n                }\n\n                // for (let i = event.resultIndex; i < event.results.length; ++i) {\n                //     if (event.results[i].isFinal) {\n                //         final_transcript = event.results[i][0].transcript.trim();\n                //         if (state == 'enabled') {\n                //             // match_token(final_transcript);\n                //         } else if (state == 'command') {\n                //             // match_command(final_transcript);\n                //         }\n                //     } else {\n                //         // interim_transcript += event.results[i][0].transcript;\n                //         interim_transcript = event.results[i][0].transcript;\n\n                //         console.log(interim_transcript);\n\n                //         if (state == 'enabled') {\n                //             match_token(interim_transcript);\n                //         } else if (state == 'command') {\n                //             match_command(interim_transcript);\n                //         }\n\n\n                //         if (state == 'command') {\n                //             start_timer(timeout, () => {\n                //                 set_state('enabled');\n                //                 sound('timeout');\n                //             })\n                //         }\n                //     }\n                // }\n\n\n\n\n            };\n            listeners();\n        } else { }\n    }\n    let listeners = () => {\n        $(document).on(\"click\", \"#vc-start\", function () {\n            speechRecognition.start(); // TODO:\n        });\n        $(document).on(\"click\", \"#vc-stop\", function () {\n            cancel = true;\n            if (speechRecognition) {\n                speechRecognition.stop();\n                speechSynthesis.cancel();\n            }\n        });\n    }\n    var ready_sound_path = '';\n    var correct_sound_path = '';\n    var timeout_sound_path = '';\n    var please_repeat_sound_path = '';\n    var sample_sound_path = '';\n\n    // WORD 2 INT\n    var Small = {\n        // EN\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight': 8,\n        'nine': 9,\n        'ten': 10,\n\n        // HE\n        'אחד': 1,\n        'אחת': 1,\n        'שני': 2,\n        'שתיים': 2,\n        'שלושת': 3,\n        'שלוש': 3,\n        'ארבעת': 4,\n        'ארבע': 4,\n        'חמשת': 5,\n        'חמש': 5,\n        'ששת': 6,\n        'שש': 6,\n        'שבעת': 7,\n        'שבע': 7,\n        'שמונת': 8,\n        'שְמוֹנֶה': 8,\n        'תשעת': 9,\n        'תשע': 9,\n        'עשרת': 10,\n        'עשר': 10,\n\n        // 'eleven': 11,\n        // 'twelve': 12,\n        // 'thirteen': 13,\n        // 'fourteen': 14,\n        // 'fifteen': 15,\n        // 'sixteen': 16,\n        // 'seventeen': 17,\n        // 'eighteen': 18,\n        // 'nineteen': 19,\n        // 'twenty': 20,\n        // 'thirty': 30,\n        // 'forty': 40,\n        // 'fifty': 50,\n        // 'sixty': 60,\n        // 'seventy': 70,\n        // 'eighty': 80,\n        // 'ninety': 90\n    };\n    var Magnitude = {\n        'thousand': 1000,\n        'million': 1000000,\n        'billion': 1000000000,\n        'trillion': 1000000000000,\n        'quadrillion': 1000000000000000,\n        'quintillion': 1000000000000000000,\n        'sextillion': 1000000000000000000000,\n        'septillion': 1000000000000000000000000,\n        'octillion': 1000000000000000000000000000,\n        'nonillion': 1000000000000000000000000000000,\n        'decillion': 1000000000000000000000000000000000,\n    };\n\n    var a, n, g;\n    function text2num(s) {\n        a = s.toString().split(/[\\s-]+/);\n        n = 0;\n        g = 0;\n        a.forEach(feach);\n        return n + g;\n    }\n    function feach(w) {\n        var x = Small[w];\n        if (x != null) {\n            g = g + x;\n        }\n        else if (w == \"hundred\") {\n            g = g * 100;\n        }\n        else {\n            x = Magnitude[w];\n            if (x != null) {\n                n = n + g * x\n                g = 0;\n            }\n            else {\n                if (w != null) {\n                    g = w;\n                }\n            }\n        }\n    }\n    ////////////////////////////\n\n    return {\n        reinit: function () {\n            reinit();\n        },\n        init: function (currentlangcode, paths, inputtokens, inputschemes) {\n\n            // console.log('currentlangcode');\n            // console.log(currentlangcode);\n\n            ready_sound_path = paths[0];\n            correct_sound_path = paths[1];\n            timeout_sound_path = paths[2];\n            please_repeat_sound_path = paths[3];\n            sample_sound_path = paths[4];\n            tokens = inputtokens;\n            // console.log(inputtokens);\n            schemes = inputschemes;\n            // console.log(inputschemes);\n            set_lang(currentlangcode);\n            init_vtt();\n        },\n        stop: function () {\n            if (speechRecognition) {\n                speechRecognition.stop();\n            }\n        },\n        init_listeners: function () {\n            listeners();\n        },\n        update_commands: function () {\n            get_commands();\n            update_commands();\n            // collect_grammar();\n        },\n        reload: function (\n            courseid, activityid, moduletype, selectgroupid,\n        ) {\n            $(\"body\").on('DOMSubtreeModified', \"#teamwork\", function () {\n                var groups = [];\n                var groups_elements = $(\"input[data-handler='input_team_name']\");\n                Array.from(groups_elements).forEach(element => {\n                    groups.push({\n                        id: element.dataset.team_id,\n                        value: element.value,\n                    });\n                });\n\n                var all_students = [];\n                var students_elements = $(\"div.teamwork_student\");\n                Array.from(students_elements).forEach(element => {\n                    all_students.push({\n                        id: element.dataset.student_id,\n                        value: element.innerText,\n                    });\n                });\n\n                var avail_students = [];\n                var students_elements = $(\"#studentList div.teamwork_student\");\n                Array.from(students_elements).forEach(element => {\n                    avail_students.push({\n                        id: element.dataset.student_id,\n                        value: element.innerText,\n                    });\n                });\n\n                var index = default_commands.map(e => e.command_id).indexOf('add_new_teamcard');\n                default_commands[index].params = {\n                    courseid: courseid,\n                    activityid: activityid,\n                    moduletype: moduletype,\n                    selectgroupid: selectgroupid,\n                }\n\n                var index = default_commands.map(e => e.command_id).indexOf('add_new_named_teamcard');\n                default_commands[index].params = {\n                    courseid: courseid,\n                    activityid: activityid,\n                    moduletype: moduletype,\n                    selectgroupid: selectgroupid,\n                    placeholders: {\n                        _teamname: null,\n                    }\n                }\n\n                var index = default_commands.map(e => e.command_id).indexOf('create_numbers_teamcard');\n                default_commands[index].params = {\n                    courseid: courseid,\n                    activityid: activityid,\n                    moduletype: moduletype,\n                    selectgroupid: selectgroupid,\n                    placeholders: {\n                        _number: null,\n                    }\n                }\n\n                var index = default_commands.map(e => e.command_id).indexOf('drag_student_card');\n                default_commands[index].params = {\n                    courseid: courseid,\n                    activityid: activityid,\n                    moduletype: moduletype,\n                    selectgroupid: selectgroupid,\n                    placeholders: {\n                        userfullname: all_students,\n                        teamname: groups,\n                    }\n                }\n\n                var index = default_commands.map(e => e.command_id).indexOf('delete_teamcard');\n                default_commands[index].params = {\n                    courseid: courseid,\n                    activityid: activityid,\n                    moduletype: moduletype,\n                    selectgroupid: selectgroupid,\n                    placeholders: {\n                        // userfullname: students,\n                        teamname: groups,\n                    }\n                }\n\n                var index = default_commands.map(e => e.command_id).indexOf('read_users');\n                default_commands[index].params = {\n                    students: avail_students,\n                }\n\n                var index = default_commands.map(e => e.command_id).indexOf('read_teams');\n                default_commands[index].params = {\n                    groups: groups,\n                }\n\n            });\n        },\n    };\n});"],"names":["define","$","Ajax","timeout","timer","timers","clear_all_timers","forEach","i","t","clearInterval","start_timer","duration","callback","countDownDate","Date","getTime","x","setInterval","now","distance","Math","floor","includes","push","current_langcode","current_short_langcode","set_lang","lang","split","tokens","schemes","commands","default_commands","public","scheme","command_id","command_exec","sound","params","require","render","l_tw_init","courseid","activityid","moduletype","selectgroupid","add_new_card","setDefaultData","studentList","teamsCard","teamname","_teamname","number","text2num","_number","index","loadingIcon","draguserid","userfullname","stud_card","groupid","find","append","allTeamsBlocks","Array","from","document","querySelectorAll","allTeams","item","team","teamid","dataset","team_id","studentid","student","student_id","newteamspost","JSON","stringify","Number","show","call","methodname","args","removeteam","done","data","remove","fail","popup","error","delete_card","user_list","students","element","value","say","group_list","groups","get_commands","scheme_id","state","similarity","s1","s2","longer","shorter","length","longerLength","editDistance","parseFloat","toLowerCase","costs","lastValue","j","newValue","charAt","min","stringSimilarity","a","b","_stringSimilarity","prep","bg1","bigrams","bg2","c1","count","c2","uniq","reduce","k","str","replace","_toConsumableArray","slice","map","c","xs","Set","find_match","input","stack","threshold","result","list","el_weight","sim","scheme_option","el","trim","sort","extract","template","templateParts","extracted","possibleKey","keyPrefix","nextPrefix","substringStartIndex","indexOf","substringEndIndex","substring","match_token","match","some","console","log","speechRecognition","abort","setTimeout","start","set_state","update_status","match_command","found","commands_schemes","found_scheme","placeholders","matched_params","input_values","plhdrs","arr_plhdrs","Object","entries","key","el_name","el_options","startsWith","match_index","id","strings","type","audio","Audio","eval","play","cancel","text","stop","msg","SpeechSynthesisUtterance","lang_for_speech","test","onend","e","querySelector","style","display","onstart","speechSynthesis","speak","last_said","said_count","info","render_status","html","txt","addClass","last","attr","available_commands","update_commands","render_commands","help_string","en","ru","iw","list_of_orders_title","join","input_state","grammararray","collect_grammar","concat","start_button","stop_button","init_vtt","window","webkitSpeechRecognition","SpeechGrammarList","webkitSpeechGrammarList","speechRecognitionList","grammar","addFromString","grammars","maxAlternatives","continuous","interimResults","final_transcript","onerror","onresult","event","interim_transcript","resultIndex","results","isFinal","transcript","listeners","on","ready_sound_path","correct_sound_path","timeout_sound_path","please_repeat_sound_path","sample_sound_path","Small","Magnitude","n","g","s","toString","feach","w","reinit","init","currentlangcode","paths","inputtokens","inputschemes","init_listeners","reload","groups_elements","all_students","students_elements","innerText","avail_students"],"mappings":"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"}